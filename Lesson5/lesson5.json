[ {
  "flowContents" : {
    "identifier" : "9c460797-72cc-35df-85b0-e59308273868",
    "instanceIdentifier" : "2bfa6115-0194-1000-5b4d-e2a7b4cfba91",
    "name" : "Lab5",
    "comments" : "Lookup",
    "position" : {
      "x" : -40.0,
      "y" : -160.0
    },
    "processGroups" : [ ],
    "remoteProcessGroups" : [ ],
    "processors" : [ {
      "identifier" : "1623b2ae-1144-3ccd-a66a-5b48ae6f7e9b",
      "instanceIdentifier" : "2c214498-0194-1000-7ddd-454632f4a9ca",
      "name" : "GenerateRecord",
      "comments" : "",
      "position" : {
        "x" : 448.0,
        "y" : -344.0
      },
      "type" : "org.apache.nifi.processors.standard.GenerateRecord",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "nullable-fields" : "false",
        "birthdate" : "DateAndTime.birthday",
        "number-of-records" : "100",
        "surname" : "Name.lastName",
        "record-writer" : "faf25201-e4a5-3692-b168-2195fd1a12a7",
        "schema-text" : null,
        "null-percentage" : "0"
      },
      "propertyDescriptors" : {
        "nullable-fields" : {
          "name" : "nullable-fields",
          "displayName" : "Nullable Fields",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "birthdate" : {
          "name" : "birthdate",
          "displayName" : "birthdate",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "number-of-records" : {
          "name" : "number-of-records",
          "displayName" : "Number of Records",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "surname" : {
          "name" : "surname",
          "displayName" : "surname",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "record-writer" : {
          "name" : "record-writer",
          "displayName" : "Record Writer",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-text" : {
          "name" : "schema-text",
          "displayName" : "Schema Text",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "null-percentage" : {
          "name" : "null-percentage",
          "displayName" : "Null Value Percentage",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 0,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ ],
      "scheduledState" : "ENABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "1459e344-3352-38da-96cf-d06904967b8b",
      "instanceIdentifier" : "2c28ab97-0194-1000-141d-d38733f06e97",
      "name" : "UpdateRecord",
      "comments" : "",
      "position" : {
        "x" : 448.0,
        "y" : 16.0
      },
      "type" : "org.apache.nifi.processors.standard.UpdateRecord",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "Record Writer" : "faf25201-e4a5-3692-b168-2195fd1a12a7",
        "Record Reader" : "ccc4e498-6172-3661-94f9-e53602145aab",
        "Replacement Value Strategy" : "literal-value",
        "/rand" : "${random():mod(99382):plus(1)}"
      },
      "propertyDescriptors" : {
        "Record Writer" : {
          "name" : "Record Writer",
          "displayName" : "Record Writer",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Record Reader" : {
          "name" : "Record Reader",
          "displayName" : "Record Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Replacement Value Strategy" : {
          "name" : "Replacement Value Strategy",
          "displayName" : "Replacement Value Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "/rand" : {
          "name" : "/rand",
          "displayName" : "/rand",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 0,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "failure" ],
      "scheduledState" : "ENABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "39293df4-0194-1000-ad06-5c239b50f60c",
      "instanceIdentifier" : "b6361cf9-8118-3695-bb96-a746c1b454dd",
      "name" : "LookupRecord SQL PG",
      "comments" : "",
      "position" : {
        "x" : 1152.0,
        "y" : 336.0
      },
      "type" : "org.apache.nifi.processors.standard.LookupRecord",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "result-contents" : "record-fields",
        "routing-strategy" : "route-to-success",
        "Root Record Path" : null,
        "record-path-lookup-miss-result-cache-size" : "0",
        "result-record-path" : "/surname",
        "record-writer" : "83577715-eba1-3a40-b647-02746169ff82",
        "record-reader" : "76a15e26-07b7-3f1c-9b37-b787cfcedc84",
        "lookup-service" : "57daac09-8acc-3b80-bd3e-28b5166edf39",
        "record-update-strategy" : "use-property",
        "key" : "/rand"
      },
      "propertyDescriptors" : {
        "result-contents" : {
          "name" : "result-contents",
          "displayName" : "Record Result Contents",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "routing-strategy" : {
          "name" : "routing-strategy",
          "displayName" : "Routing Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Root Record Path" : {
          "name" : "Root Record Path",
          "displayName" : "Root Record Path",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-path-lookup-miss-result-cache-size" : {
          "name" : "record-path-lookup-miss-result-cache-size",
          "displayName" : "Cache Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "result-record-path" : {
          "name" : "result-record-path",
          "displayName" : "Result RecordPath",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-writer" : {
          "name" : "record-writer",
          "displayName" : "Record Writer",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-reader" : {
          "name" : "record-reader",
          "displayName" : "Record Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "lookup-service" : {
          "name" : "lookup-service",
          "displayName" : "Lookup Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-update-strategy" : {
          "name" : "record-update-strategy",
          "displayName" : "Record Update Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "key" : {
          "name" : "key",
          "displayName" : "key",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 1000,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "failure" ],
      "scheduledState" : "ENABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "161feaec-9136-3979-8aa3-13c07e455e5e",
      "instanceIdentifier" : "2c0bd9ee-0194-1000-8da2-b435e5be4a91",
      "name" : "PutDatabaseRecord",
      "comments" : "",
      "position" : {
        "x" : -400.0,
        "y" : 336.0
      },
      "type" : "org.apache.nifi.processors.standard.PutDatabaseRecord",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "put-db-record-allow-multiple-statements" : "false",
        "put-db-record-schema-name" : null,
        "put-db-record-field-containing-sql" : null,
        "put-db-record-unmatched-column-behavior" : "Fail on Unmatched Columns",
        "Delete Keys" : null,
        "put-db-record-catalog-name" : null,
        "put-db-record-statement-type" : "INSERT",
        "put-db-record-update-keys" : null,
        "put-db-record-quoted-identifiers" : "false",
        "put-db-record-unmatched-field-behavior" : "Ignore Unmatched Fields",
        "put-db-record-max-batch-size" : "1000",
        "Data Record Path" : null,
        "database-session-autocommit" : "false",
        "table-schema-cache-size" : "100",
        "put-db-record-quoted-table-identifiers" : "false",
        "Statement Type Record Path" : null,
        "Column Name Translation Pattern" : null,
        "put-db-record-translate-field-names" : "true",
        "put-db-record-dcbp-service" : "7a89b158-bbd8-335b-8513-1dbb82fb7919",
        "put-db-record-query-timeout" : "0 seconds",
        "Column Name Translation Strategy" : "REMOVE_SPACE",
        "rollback-on-failure" : "false",
        "put-db-record-binary-format" : "UTF-8",
        "db-type" : "Generic",
        "put-db-record-table-name" : "russian_surnames",
        "put-db-record-record-reader" : "ccc4e498-6172-3661-94f9-e53602145aab"
      },
      "propertyDescriptors" : {
        "put-db-record-allow-multiple-statements" : {
          "name" : "put-db-record-allow-multiple-statements",
          "displayName" : "Allow Multiple SQL Statements",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-schema-name" : {
          "name" : "put-db-record-schema-name",
          "displayName" : "Schema Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-field-containing-sql" : {
          "name" : "put-db-record-field-containing-sql",
          "displayName" : "Field Containing SQL",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-unmatched-column-behavior" : {
          "name" : "put-db-record-unmatched-column-behavior",
          "displayName" : "Unmatched Column Behavior",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Delete Keys" : {
          "name" : "Delete Keys",
          "displayName" : "Delete Keys",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-catalog-name" : {
          "name" : "put-db-record-catalog-name",
          "displayName" : "Catalog Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-statement-type" : {
          "name" : "put-db-record-statement-type",
          "displayName" : "Statement Type",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-update-keys" : {
          "name" : "put-db-record-update-keys",
          "displayName" : "Update Keys",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-quoted-identifiers" : {
          "name" : "put-db-record-quoted-identifiers",
          "displayName" : "Quote Column Identifiers",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-unmatched-field-behavior" : {
          "name" : "put-db-record-unmatched-field-behavior",
          "displayName" : "Unmatched Field Behavior",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-max-batch-size" : {
          "name" : "put-db-record-max-batch-size",
          "displayName" : "Maximum Batch Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Data Record Path" : {
          "name" : "Data Record Path",
          "displayName" : "Data Record Path",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "database-session-autocommit" : {
          "name" : "database-session-autocommit",
          "displayName" : "Database Session AutoCommit",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "table-schema-cache-size" : {
          "name" : "table-schema-cache-size",
          "displayName" : "Table Schema Cache Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-quoted-table-identifiers" : {
          "name" : "put-db-record-quoted-table-identifiers",
          "displayName" : "Quote Table Identifiers",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Statement Type Record Path" : {
          "name" : "Statement Type Record Path",
          "displayName" : "Statement Type Record Path",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Column Name Translation Pattern" : {
          "name" : "Column Name Translation Pattern",
          "displayName" : "Column Name Translation Pattern",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-translate-field-names" : {
          "name" : "put-db-record-translate-field-names",
          "displayName" : "Translate Field Names",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-dcbp-service" : {
          "name" : "put-db-record-dcbp-service",
          "displayName" : "Database Connection Pooling Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-query-timeout" : {
          "name" : "put-db-record-query-timeout",
          "displayName" : "Max Wait Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Column Name Translation Strategy" : {
          "name" : "Column Name Translation Strategy",
          "displayName" : "Column Name Translation Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "rollback-on-failure" : {
          "name" : "rollback-on-failure",
          "displayName" : "Rollback On Failure",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-binary-format" : {
          "name" : "put-db-record-binary-format",
          "displayName" : "Binary String Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "db-type" : {
          "name" : "db-type",
          "displayName" : "Database Type",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-table-name" : {
          "name" : "put-db-record-table-name",
          "displayName" : "Table Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "put-db-record-record-reader" : {
          "name" : "put-db-record-record-reader",
          "displayName" : "Record Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 0,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "failure", "retry" ],
      "scheduledState" : "DISABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "7cc6bf73-67e1-3b57-8570-237832855bd7",
      "instanceIdentifier" : "2c094d62-0194-1000-fcf2-4677a6d0f55c",
      "name" : "PutFile",
      "comments" : "",
      "position" : {
        "x" : -400.0,
        "y" : 200.0
      },
      "type" : "org.apache.nifi.processors.standard.PutFile",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "Group" : null,
        "Owner" : null,
        "Create Missing Directories" : "true",
        "Permissions" : null,
        "Maximum File Count" : null,
        "Last Modified Time" : null,
        "Directory" : "${my.path}",
        "Conflict Resolution Strategy" : "replace"
      },
      "propertyDescriptors" : {
        "Group" : {
          "name" : "Group",
          "displayName" : "Group",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Owner" : {
          "name" : "Owner",
          "displayName" : "Owner",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Create Missing Directories" : {
          "name" : "Create Missing Directories",
          "displayName" : "Create Missing Directories",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Permissions" : {
          "name" : "Permissions",
          "displayName" : "Permissions",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Maximum File Count" : {
          "name" : "Maximum File Count",
          "displayName" : "Maximum File Count",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Last Modified Time" : {
          "name" : "Last Modified Time",
          "displayName" : "Last Modified Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Directory" : {
          "name" : "Directory",
          "displayName" : "Directory",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Conflict Resolution Strategy" : {
          "name" : "Conflict Resolution Strategy",
          "displayName" : "Conflict Resolution Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 0,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "failure" ],
      "scheduledState" : "ENABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "66d8e3f0-8bb5-3fbb-b019-be40f900a9b0",
      "instanceIdentifier" : "2c43ded2-0194-1000-ebfa-84b4a3c1edc3",
      "name" : "LookupRecord SQL",
      "comments" : "",
      "position" : {
        "x" : 1152.0,
        "y" : -88.0
      },
      "type" : "org.apache.nifi.processors.standard.LookupRecord",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "result-contents" : "record-fields",
        "routing-strategy" : "route-to-success",
        "Root Record Path" : null,
        "record-path-lookup-miss-result-cache-size" : "0",
        "result-record-path" : "/surname",
        "record-writer" : "83577715-eba1-3a40-b647-02746169ff82",
        "record-reader" : "76a15e26-07b7-3f1c-9b37-b787cfcedc84",
        "lookup-service" : "aa247e4b-7fe6-3655-bf2c-e2fef46951ec",
        "record-update-strategy" : "use-property",
        "key" : "/rand"
      },
      "propertyDescriptors" : {
        "result-contents" : {
          "name" : "result-contents",
          "displayName" : "Record Result Contents",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "routing-strategy" : {
          "name" : "routing-strategy",
          "displayName" : "Routing Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Root Record Path" : {
          "name" : "Root Record Path",
          "displayName" : "Root Record Path",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-path-lookup-miss-result-cache-size" : {
          "name" : "record-path-lookup-miss-result-cache-size",
          "displayName" : "Cache Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "result-record-path" : {
          "name" : "result-record-path",
          "displayName" : "Result RecordPath",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-writer" : {
          "name" : "record-writer",
          "displayName" : "Record Writer",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-reader" : {
          "name" : "record-reader",
          "displayName" : "Record Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "lookup-service" : {
          "name" : "lookup-service",
          "displayName" : "Lookup Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-update-strategy" : {
          "name" : "record-update-strategy",
          "displayName" : "Record Update Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "key" : {
          "name" : "key",
          "displayName" : "key",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 1000,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "failure" ],
      "scheduledState" : "ENABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "0e273e3b-e45f-34fa-9f36-d7c8a46b21d9",
      "instanceIdentifier" : "2c287f6d-0194-1000-97a4-3b23da0f494a",
      "name" : "LookupRecord CSV",
      "comments" : "",
      "position" : {
        "x" : 1152.0,
        "y" : -232.0
      },
      "type" : "org.apache.nifi.processors.standard.LookupRecord",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "result-contents" : "record-fields",
        "routing-strategy" : "route-to-success",
        "Root Record Path" : null,
        "record-path-lookup-miss-result-cache-size" : "0",
        "result-record-path" : "/surname",
        "record-writer" : "83577715-eba1-3a40-b647-02746169ff82",
        "record-reader" : "76a15e26-07b7-3f1c-9b37-b787cfcedc84",
        "lookup-service" : "a9645f5b-5bf5-3ced-8c24-73123e68a61b",
        "record-update-strategy" : "use-property",
        "key" : "/rand"
      },
      "propertyDescriptors" : {
        "result-contents" : {
          "name" : "result-contents",
          "displayName" : "Record Result Contents",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "routing-strategy" : {
          "name" : "routing-strategy",
          "displayName" : "Routing Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Root Record Path" : {
          "name" : "Root Record Path",
          "displayName" : "Root Record Path",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-path-lookup-miss-result-cache-size" : {
          "name" : "record-path-lookup-miss-result-cache-size",
          "displayName" : "Cache Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "result-record-path" : {
          "name" : "result-record-path",
          "displayName" : "Result RecordPath",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-writer" : {
          "name" : "record-writer",
          "displayName" : "Record Writer",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-reader" : {
          "name" : "record-reader",
          "displayName" : "Record Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "lookup-service" : {
          "name" : "lookup-service",
          "displayName" : "Lookup Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-update-strategy" : {
          "name" : "record-update-strategy",
          "displayName" : "Record Update Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "key" : {
          "name" : "key",
          "displayName" : "key",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 1000,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "failure" ],
      "scheduledState" : "ENABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "3713e726-e155-3c6a-a3bd-f9e6ea40b2a8",
      "instanceIdentifier" : "2bfb3bd7-0194-1000-ae98-6ef3900877b7",
      "name" : "Инициализация атрибутов",
      "comments" : "",
      "position" : {
        "x" : -400.0,
        "y" : -480.0
      },
      "type" : "org.apache.nifi.processors.standard.GenerateFlowFile",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "character-set" : "UTF-8",
        "File Size" : "0B",
        "mime-type" : "application/json",
        "filename" : "russian_surnames.csv",
        "generate-ff-custom-text" : null,
        "Batch Size" : "1",
        "schema.name" : "init_record",
        "Unique FlowFiles" : "false",
        "my.path" : ".\\extensions",
        "my.url" : "https://raw.githubusercontent.com/sorokinpf/russian_names/refs/heads/master/russian_surnames.txt",
        "Data Format" : "Text"
      },
      "propertyDescriptors" : {
        "character-set" : {
          "name" : "character-set",
          "displayName" : "Character Set",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "File Size" : {
          "name" : "File Size",
          "displayName" : "File Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "mime-type" : {
          "name" : "mime-type",
          "displayName" : "Mime Type",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "filename" : {
          "name" : "filename",
          "displayName" : "filename",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "generate-ff-custom-text" : {
          "name" : "generate-ff-custom-text",
          "displayName" : "Custom Text",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Batch Size" : {
          "name" : "Batch Size",
          "displayName" : "Batch Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema.name" : {
          "name" : "schema.name",
          "displayName" : "schema.name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "Unique FlowFiles" : {
          "name" : "Unique FlowFiles",
          "displayName" : "Unique FlowFiles",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "my.path" : {
          "name" : "my.path",
          "displayName" : "my.path",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "my.url" : {
          "name" : "my.url",
          "displayName" : "my.url",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "Data Format" : {
          "name" : "Data Format",
          "displayName" : "Data Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 0 0 31 2 ?",
      "schedulingStrategy" : "CRON_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 0,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ ],
      "scheduledState" : "DISABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "01d6e7c6-354e-3564-b423-1c05e61539b3",
      "instanceIdentifier" : "2bfca6c9-0194-1000-3388-e7ee0a4d67b0",
      "name" : "QueryRecord",
      "comments" : "Фильтрация бракованных записей \nКапитализация первой буквы фамилии\nПрисвоение порядкового номера каждой строке",
      "position" : {
        "x" : -400.0,
        "y" : -72.0
      },
      "type" : "org.apache.nifi.processors.standard.QueryRecord",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "dbf-default-precision" : "10",
        "record-writer" : "faf25201-e4a5-3692-b168-2195fd1a12a7",
        "record-reader" : "cbdc9fbc-8291-38c6-8566-0d947b014841",
        "include-zero-record-flowfiles" : "true",
        "dbf-default-scale" : "0",
        "out" : "select \nROW_NUMBER() OVER() as id,\nUPPER(SUBSTRING(surname FROM 1 FOR 1)) || LOWER(SUBSTRING(surname FROM 2)) AS surname\n--surname\nfrom flowfile\nwhere surname not like '%\"%'"
      },
      "propertyDescriptors" : {
        "dbf-default-precision" : {
          "name" : "dbf-default-precision",
          "displayName" : "Default Decimal Precision",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-writer" : {
          "name" : "record-writer",
          "displayName" : "Record Writer",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-reader" : {
          "name" : "record-reader",
          "displayName" : "Record Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "include-zero-record-flowfiles" : {
          "name" : "include-zero-record-flowfiles",
          "displayName" : "Include Zero Record FlowFiles",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbf-default-scale" : {
          "name" : "dbf-default-scale",
          "displayName" : "Default Decimal Scale",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "out" : {
          "name" : "out",
          "displayName" : "out",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 0,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "original", "failure" ],
      "scheduledState" : "ENABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "2cfaca06-0194-1000-da1b-42fca4f26679",
      "instanceIdentifier" : "7fafa1b8-f3ca-32cd-eeb8-bf05f023efdf",
      "name" : "LookupRecord Redis",
      "comments" : "",
      "position" : {
        "x" : 1152.0,
        "y" : 56.0
      },
      "type" : "org.apache.nifi.processors.standard.LookupRecord",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "result-contents" : "record-fields",
        "routing-strategy" : "route-to-success",
        "Root Record Path" : null,
        "record-path-lookup-miss-result-cache-size" : "100000",
        "result-record-path" : "/surname",
        "record-writer" : "83577715-eba1-3a40-b647-02746169ff82",
        "record-reader" : "76a15e26-07b7-3f1c-9b37-b787cfcedc84",
        "lookup-service" : "d372595d-84bc-3723-94b1-11acd5a3fcd4",
        "record-update-strategy" : "use-property",
        "key" : "/rand"
      },
      "propertyDescriptors" : {
        "result-contents" : {
          "name" : "result-contents",
          "displayName" : "Record Result Contents",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "routing-strategy" : {
          "name" : "routing-strategy",
          "displayName" : "Routing Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Root Record Path" : {
          "name" : "Root Record Path",
          "displayName" : "Root Record Path",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-path-lookup-miss-result-cache-size" : {
          "name" : "record-path-lookup-miss-result-cache-size",
          "displayName" : "Cache Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "result-record-path" : {
          "name" : "result-record-path",
          "displayName" : "Result RecordPath",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-writer" : {
          "name" : "record-writer",
          "displayName" : "Record Writer",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-reader" : {
          "name" : "record-reader",
          "displayName" : "Record Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "lookup-service" : {
          "name" : "lookup-service",
          "displayName" : "Lookup Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "record-update-strategy" : {
          "name" : "record-update-strategy",
          "displayName" : "Record Update Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "key" : {
          "name" : "key",
          "displayName" : "key",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 1000,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "failure" ],
      "scheduledState" : "ENABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "2da18838-0194-1000-12f8-a9e336bc2de7",
      "instanceIdentifier" : "6ac1c677-a8e1-39a9-d955-e50583fb51d9",
      "name" : "PutRecord2Redis",
      "comments" : "Отправляем записи в Redis методом MSET",
      "position" : {
        "x" : -400.0,
        "y" : 64.0
      },
      "type" : "org.apache.nifi.processors.groovyx.ExecuteGroovyScript",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-groovyx-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "groovyx-script-body" : "@Grab(group='org.springframework.data', module='spring-data-redis', version='3.1.0')\nimport org.springframework.data.redis.connection.RedisConnection\nimport org.springframework.data.redis.connection.RedisConnectionFactory\n\nimport org.apache.nifi.processor.io.StreamCallback\nimport java.nio.charset.StandardCharsets\n\n// Получение FlowFile\ndef flowFile = session.get()\nif (!flowFile) return\n\ntry {\n    // Получение значения свойства batch_size\n    def batchSize = batch_size.value ? batch_size.value.toInteger() : 1000\n    if (batchSize <= 0) {\n        throw new IllegalStateException(\"Свойство batch_size должно быть положительным числом\")\n    }\n    log.info(\"Размер батча: ${batchSize}\")\n\n    // Получение значения динамического свойства для Redis\n    def redisServiceUuid = redis_service_uuid.value\n    if (!redisServiceUuid) {\n        throw new IllegalStateException(\"Свойство redis_service_uuid не указано\")\n    }\n    log.info(\"UUID сервиса Redis: ${redisServiceUuid}\")\n\n    // Получение сервиса RedisConnectionPoolService по UUID\n    def redisService = context.getControllerServiceLookup().getControllerService(redisServiceUuid)\n    if (!redisService) {\n        throw new IllegalStateException(\"Сервис Redis не найден: ${redisServiceUuid}\")\n    }\n    log.info(\"Сервис Redis найден: ${redisService}\")\n\n    // Получение RedisConnection\n    def redisConnection = redisService.getConnection()\n    if (!redisConnection) {\n        throw new IllegalStateException(\"Не удалось получить RedisConnection из сервиса: ${redisServiceUuid}\")\n    }\n    log.info(\"RedisConnection успешно получен из сервиса\")\n\n    // Получение сервиса RecordReaderFactory\n    def recordReaderFactory = context.getProperty('RecordReader.in').asControllerService(org.apache.nifi.serialization.RecordReaderFactory)\n    if (!recordReaderFactory) {\n        throw new IllegalStateException(\"Сервис RecordReader не найден\")\n    }\n    log.info(\"Сервис RecordReader найден: ${recordReaderFactory}\")\n\n    // Получение сервиса RecordSetWriterFactory\n    def recordWriterFactory = context.getProperty('RecordWriter.out').asControllerService(org.apache.nifi.serialization.RecordSetWriterFactory)\n    if (!recordWriterFactory) {\n        throw new IllegalStateException(\"Сервис RecordWriter не найден\")\n    }\n    log.info(\"Сервис RecordWriter найден: ${recordWriterFactory}\")\n\n    // Получение динамических свойств для ключа и значения\n    def keyPath = key_path.value\n    if (!keyPath) {\n        throw new IllegalStateException(\"Свойство key_path не указано\")\n    }\n    log.info(\"Путь для ключа: ${keyPath}\")\n\n    def valuePath = value_path.value\n    if (!valuePath) {\n        throw new IllegalStateException(\"Свойство value_path не указано\")\n    }\n    log.info(\"Путь для значения: ${valuePath}\")\n\n    // Обработка FlowFile с использованием RecordReader и RecordWriter\n    flowFile = session.write(flowFile, { inputStream, outputStream ->\n        def recordReader = null\n        def recordWriter = null\n        try {\n            // Создание RecordReader\n            recordReader = recordReaderFactory.createRecordReader(flowFile, inputStream, log)\n\n            // Создание RecordWriter\n            def schema = recordReader.schema // Получаем схему из RecordReader\n            recordWriter = recordWriterFactory.createWriter(log, schema, outputStream, flowFile)\n\n            // Начало записи набора записей\n            recordWriter.beginRecordSet()\n\n            def batch = []\n\n            // Чтение записей\n            def record\n            while ((record = recordReader.nextRecord()) != null) {\n                try {\n                    // Добавление записи в батч\n                    batch.add(record)\n\n                    // Если батч достиг размера, отправляем его в Redis\n                    if (batch.size() >= batchSize) {\n                        processBatch(batch, redisConnection, recordWriter, keyPath, valuePath)\n                        batch.clear()\n                    }\n                } catch (Exception e) {\n                    log.error(\"Ошибка при обработке записи: ${record}\", e)\n                }\n            }\n\n            // Отправка оставшихся записей в Redis\n            if (!batch.isEmpty()) {\n                processBatch(batch, redisConnection, recordWriter, keyPath, valuePath)\n            }\n\n            // Завершение записи набора записей\n            recordWriter.finishRecordSet()\n        } catch (Exception e) {\n            log.error(\"Ошибка при обработке FlowFile: ${e.message}\", e)\n        } finally {\n            // Закрытие RecordReader\n            if (recordReader != null) {\n                recordReader.close()\n            }\n            // Закрытие RecordWriter\n            if (recordWriter != null) {\n                recordWriter.close()\n            }\n            // Закрытие соединения с Redis\n            redisConnection.close()\n        }\n    } as StreamCallback)\n\n    // Перенаправление FlowFile в успешный выход\n    session.transfer(flowFile, REL_SUCCESS)\n} catch (Exception e) {\n    // Обработка ошибок\n    log.error(\"Ошибка при обработке FlowFile: ${e.message}\", e)\n    session.transfer(flowFile, REL_FAILURE)\n}\n\n// Метод для обработки батча\ndef processBatch(batch, redisConnection, recordWriter, keyPath, valuePath) {\n    def map = [:] // Создаем map для хранения ключей и значений\n\n    // Обработка каждой записи в батче\n    batch.each { record ->\n        try {\n            // Извлечение ключа и значения из записи по указанным путям\n            def key = record.getValue(keyPath) // Используем путь для ключа\n            def value = record.getValue(valuePath) // Используем путь для значения\n\n            // Проверка, что ключ и значение не пустые и являются строками\n            if (key != null && value != null) {\n                // Явное преобразование ключа и значения в строки\n                def keyStr = key.toString()\n                def valueStr = value.toString()\n\n                // Добавляем ключ и значение в map\n                map[keyStr] = valueStr\n            } else {\n                log.warn(\"Пропущена запись из-за отсутствия ключа или значения: ${record}\")\n            }\n\n            // Запись записи в выходной поток\n            recordWriter.write(record)\n        } catch (Exception e) {\n            log.error(\"Ошибка при обработке записи: ${record}\", e)\n        }\n    }\n\n    // Отправка команд MSET в Redis\n    if (!map.isEmpty()) {\n        try {\n            // Преобразуем map в формат, который понимает Redis\n            def redisMap = [:]\n            map.each { k, v ->\n                redisMap[k.getBytes(StandardCharsets.UTF_8)] = v.getBytes(StandardCharsets.UTF_8)\n            }\n\n            // Отправка данных в Redis\n            redisConnection.stringCommands().mSet(redisMap)\n            log.info(\"Успешно отправлено ${map.size()} записей в Redis с использованием MSET\")\n        } catch (Exception e) {\n            log.error(\"Ошибка при отправке данных в Redis: ${e.message}\", e)\n        }\n    } else {\n        log.warn(\"Нет данных для отправки в Redis\")\n    }\n}",
        "batch_size" : "10000",
        "groovyx-failure-strategy" : "rollback",
        "groovyx-additional-classpath" : null,
        "redis_service_uuid" : "2cfc32cf-0194-1000-ba0f-1813f5f4a168",
        "RecordReader.in" : "76a15e26-07b7-3f1c-9b37-b787cfcedc84",
        "RecordWriter.out" : "faf25201-e4a5-3692-b168-2195fd1a12a7",
        "key_path" : "id",
        "value_path" : "surname",
        "groovyx-script-file" : null
      },
      "propertyDescriptors" : {
        "groovyx-script-body" : {
          "name" : "groovyx-script-body",
          "displayName" : "Script Body",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "batch_size" : {
          "name" : "batch_size",
          "displayName" : "batch_size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "groovyx-failure-strategy" : {
          "name" : "groovyx-failure-strategy",
          "displayName" : "Failure strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "groovyx-additional-classpath" : {
          "name" : "groovyx-additional-classpath",
          "displayName" : "Additional classpath",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "redis_service_uuid" : {
          "name" : "redis_service_uuid",
          "displayName" : "redis_service_uuid",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "RecordReader.in" : {
          "name" : "RecordReader.in",
          "displayName" : "RecordReader.in",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : true
        },
        "RecordWriter.out" : {
          "name" : "RecordWriter.out",
          "displayName" : "RecordWriter.out",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : true
        },
        "key_path" : {
          "name" : "key_path",
          "displayName" : "key_path",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "value_path" : {
          "name" : "value_path",
          "displayName" : "value_path",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "groovyx-script-file" : {
          "name" : "groovyx-script-file",
          "displayName" : "Script File",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false,
          "resourceDefinition" : {
            "cardinality" : "SINGLE",
            "resourceTypes" : [ "FILE" ]
          }
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 0,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "failure" ],
      "scheduledState" : "ENABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "b1893589-ac56-32e0-9605-7dea7695a9fe",
      "instanceIdentifier" : "2c879e40-0194-1000-c7fe-2c8a7641efc9",
      "name" : "ExecuteSQL",
      "comments" : "",
      "position" : {
        "x" : -400.0,
        "y" : -344.0
      },
      "type" : "org.apache.nifi.processors.standard.ExecuteSQL",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "esql-max-rows" : "0",
        "dbf-default-precision" : "10",
        "Max Wait Time" : "0 seconds",
        "Database Connection Pooling Service" : "72546ad6-c524-3bb0-ae4d-7698eea4f1e8",
        "sql-post-query" : "CREATE TABLE russian_surnames (\n  id INTEGER PRIMARY KEY AUTOINCREMENT,\n  surname TEXT NOT NULL\n);",
        "esql-auto-commit" : "true",
        "dbf-user-logical-types" : "false",
        "dbf-default-scale" : "0",
        "sql-pre-query" : null,
        "compression-format" : "NONE",
        "esql-output-batch-size" : "0",
        "esql-fetch-size" : "0",
        "SQL select query" : "DROP TABLE IF EXISTS russian_surnames;",
        "dbf-normalize" : "false"
      },
      "propertyDescriptors" : {
        "esql-max-rows" : {
          "name" : "esql-max-rows",
          "displayName" : "Max Rows Per Flow File",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbf-default-precision" : {
          "name" : "dbf-default-precision",
          "displayName" : "Default Decimal Precision",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Max Wait Time" : {
          "name" : "Max Wait Time",
          "displayName" : "Max Wait Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Database Connection Pooling Service" : {
          "name" : "Database Connection Pooling Service",
          "displayName" : "Database Connection Pooling Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "sql-post-query" : {
          "name" : "sql-post-query",
          "displayName" : "SQL Post-Query",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "esql-auto-commit" : {
          "name" : "esql-auto-commit",
          "displayName" : "Set Auto Commit",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbf-user-logical-types" : {
          "name" : "dbf-user-logical-types",
          "displayName" : "Use Avro Logical Types",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbf-default-scale" : {
          "name" : "dbf-default-scale",
          "displayName" : "Default Decimal Scale",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "sql-pre-query" : {
          "name" : "sql-pre-query",
          "displayName" : "SQL Pre-Query",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "compression-format" : {
          "name" : "compression-format",
          "displayName" : "Compression Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "esql-output-batch-size" : {
          "name" : "esql-output-batch-size",
          "displayName" : "Output Batch Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "esql-fetch-size" : {
          "name" : "esql-fetch-size",
          "displayName" : "Fetch Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "SQL select query" : {
          "name" : "SQL select query",
          "displayName" : "SQL select query",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbf-normalize" : {
          "name" : "dbf-normalize",
          "displayName" : "Normalize Table/Column Names",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 0,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "failure" ],
      "scheduledState" : "DISABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "2dc8221d-0194-1000-3ccf-00c3ff371c8e",
      "instanceIdentifier" : "591e3339-3cfc-3dba-80f9-3d4d3ed4c9f2",
      "name" : "LookupRecord Redis (groovy)",
      "comments" : "",
      "position" : {
        "x" : 1152.0,
        "y" : 200.0
      },
      "type" : "org.apache.nifi.processors.groovyx.ExecuteGroovyScript",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-groovyx-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "groovyx-script-body" : "@Grab(group='org.springframework.data', module='spring-data-redis', version='3.1.0')\nimport org.springframework.data.redis.connection.RedisConnection\nimport org.springframework.data.redis.connection.RedisConnectionFactory\n\nimport org.apache.nifi.processor.io.StreamCallback\nimport java.nio.charset.StandardCharsets\n\n// Получение FlowFile\ndef flowFile = session.get()\nif (!flowFile) return\n\ntry {\n    // Получение значения свойства batch_size\n    def batchSize = batch_size.value ? batch_size.value.toInteger() : 1000\n    if (batchSize <= 0) {\n        throw new IllegalStateException(\"Свойство batch_size должно быть положительным числом\")\n    }\n    log.info(\"Размер батча: ${batchSize}\")\n\n    // Получение значения динамического свойства для Redis\n    def redisServiceUuid = redis_service_uuid.value\n    if (!redisServiceUuid) {\n        throw new IllegalStateException(\"Свойство redis_service_uuid не указано\")\n    }\n    log.info(\"UUID сервиса Redis: ${redisServiceUuid}\")\n\n    // Получение сервиса RedisConnectionPoolService по UUID\n    def redisService = context.getControllerServiceLookup().getControllerService(redisServiceUuid)\n    if (!redisService) {\n        throw new IllegalStateException(\"Сервис Redis не найден: ${redisServiceUuid}\")\n    }\n    log.info(\"Сервис Redis найден: ${redisService}\")\n\n    // Получение RedisConnection\n    def redisConnection = redisService.getConnection()\n    if (!redisConnection) {\n        throw new IllegalStateException(\"Не удалось получить RedisConnection из сервиса: ${redisServiceUuid}\")\n    }\n    log.info(\"RedisConnection успешно получен из сервиса\")\n\n    // Получение сервиса RecordReaderFactory\n    def recordReaderFactory = context.getProperty('RecordReader.in').asControllerService(org.apache.nifi.serialization.RecordReaderFactory)\n    if (!recordReaderFactory) {\n        throw new IllegalStateException(\"Сервис RecordReader не найден\")\n    }\n    log.info(\"Сервис RecordReader найден: ${recordReaderFactory}\")\n\n    // Получение сервиса RecordSetWriterFactory\n    def recordWriterFactory = context.getProperty('RecordWriter.out').asControllerService(org.apache.nifi.serialization.RecordSetWriterFactory)\n    if (!recordWriterFactory) {\n        throw new IllegalStateException(\"Сервис RecordWriter не найден\")\n    }\n    log.info(\"Сервис RecordWriter найден: ${recordWriterFactory}\")\n\n    // Получение динамических свойств для ключа и результата\n    def keyField = key_field.value\n    if (!keyField) {\n        throw new IllegalStateException(\"Свойство key_field не указано\")\n    }\n    log.info(\"Поле для ключа: ${keyField}\")\n\n    def resultField = result_field.value\n    if (!resultField) {\n        throw new IllegalStateException(\"Свойство result_field не указано\")\n    }\n    log.info(\"Поле для результата: ${resultField}\")\n\n    // Обработка FlowFile с использованием RecordReader и RecordWriter\n    flowFile = session.write(flowFile, { inputStream, outputStream ->\n        def recordReader = null\n        def recordWriter = null\n        try {\n            // Создание RecordReader\n            recordReader = recordReaderFactory.createRecordReader(flowFile, inputStream, log)\n\n            // Получение схемы из RecordWriterFactory\n            def schema = recordWriterFactory.getSchema(flowFile.getAttributes(), null)\n            if (schema == null) {\n                throw new IllegalStateException(\"Схема не найдена в RecordWriterFactory\")\n            }\n\n            // Добавление нового поля в схему, если его нет\n            def newSchemaFields = schema.fields.collect { it }\n            if (!schema.fieldNames.contains(resultField)) {\n                newSchemaFields.add(new org.apache.nifi.serialization.record.RecordField(resultField, org.apache.nifi.serialization.record.RecordFieldType.STRING.dataType))\n                schema = new org.apache.nifi.serialization.SimpleRecordSchema(newSchemaFields)\n            }\n\n            // Создание RecordWriter с использованием обновленной схемы\n            recordWriter = recordWriterFactory.createWriter(log, schema, outputStream, flowFile)\n\n            // Начало записи набора записей\n            recordWriter.beginRecordSet()\n\n            def batch = []\n            def keys = []\n\n            // Чтение записей\n            def record\n            while ((record = recordReader.nextRecord()) != null) {\n                try {\n                    // Извлечение ключа для обогащения (поле, указанное в key_field)\n                    def key = record.getAsString(keyField)\n                    if (key != null) {\n                        // Добавляем запись и ключ в батч\n                        batch.add(record)\n                        keys.add(key.toString().getBytes(StandardCharsets.UTF_8))\n\n                        // Если батч достиг размера, обрабатываем его\n                        if (batch.size() >= batchSize) {\n                            processBatch(batch, keys, redisConnection, recordWriter, resultField)\n                            batch.clear()\n                            keys.clear()\n                        }\n                    } else {\n                        log.warn(\"Пропущена запись из-за отсутствия ключа: ${record}\")\n                    }\n                } catch (Exception e) {\n                    log.error(\"Ошибка при обработке записи: ${record}\", e)\n                }\n            }\n\n            // Обработка оставшихся записей\n            if (!batch.isEmpty()) {\n                processBatch(batch, keys, redisConnection, recordWriter, resultField)\n            }\n\n            // Завершение записи набора записей\n            recordWriter.finishRecordSet()\n        } catch (Exception e) {\n            log.error(\"Ошибка при обработке FlowFile: ${e.message}\", e)\n        } finally {\n            // Закрытие RecordReader\n            if (recordReader != null) {\n                recordReader.close()\n            }\n            // Закрытие RecordWriter\n            if (recordWriter != null) {\n                recordWriter.close()\n            }\n            // Закрытие соединения с Redis\n            redisConnection.close()\n        }\n    } as StreamCallback)\n\n    // Перенаправление FlowFile в успешный выход\n    session.transfer(flowFile, REL_SUCCESS)\n} catch (Exception e) {\n    // Обработка ошибок\n    log.error(\"Ошибка при обработке FlowFile: ${e.message}\", e)\n    session.transfer(flowFile, REL_FAILURE)\n}\n\n// Метод для обработки батча\ndef processBatch(batch, keys, redisConnection, recordWriter, resultField) {\n    try {\n        // Извлечение значений из Redis с использованием MGET\n        def values = redisConnection.stringCommands().mGet(keys as byte[][])\n\n        // Обогащение записей\n        batch.eachWithIndex { record, index ->\n            try {\n                // Получение значения из Redis\n                def value = values[index]\n                if (value != null) {\n                    // Логирование ключа и значения\n                    log.info(\"Ключ: ${new String(keys[index], StandardCharsets.UTF_8)}, Значение: ${new String(value, StandardCharsets.UTF_8)}\")\n\n                    // Запись значения в поле, указанное в resultField\n                    record.setValue(resultField, new String(value, StandardCharsets.UTF_8))\n                } else {\n                    log.warn(\"Значение не найдено в Redis для ключа: ${new String(keys[index], StandardCharsets.UTF_8)}\")\n\n                    // Если значение не найдено, записываем null в поле resultField\n                    record.setValue(resultField, null)\n                }\n\n                // Запись обогащенной записи в выходной поток через RecordWriter\n                recordWriter.write(record)\n            } catch (Exception e) {\n                log.error(\"Ошибка при обработке записи: ${record}\", e)\n            }\n        }\n    } catch (Exception e) {\n        log.error(\"Ошибка при извлечении данных из Redis: ${e.message}\", e)\n    }\n}",
        "batch_size" : "1000",
        "groovyx-failure-strategy" : "rollback",
        "key_field" : "rand",
        "groovyx-additional-classpath" : null,
        "redis_service_uuid" : "2cfc32cf-0194-1000-ba0f-1813f5f4a168",
        "RecordReader.in" : "76a15e26-07b7-3f1c-9b37-b787cfcedc84",
        "RecordWriter.out" : "83577715-eba1-3a40-b647-02746169ff82",
        "groovyx-script-file" : null,
        "result_field" : "surname"
      },
      "propertyDescriptors" : {
        "groovyx-script-body" : {
          "name" : "groovyx-script-body",
          "displayName" : "Script Body",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "batch_size" : {
          "name" : "batch_size",
          "displayName" : "batch_size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "groovyx-failure-strategy" : {
          "name" : "groovyx-failure-strategy",
          "displayName" : "Failure strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "key_field" : {
          "name" : "key_field",
          "displayName" : "key_field",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "groovyx-additional-classpath" : {
          "name" : "groovyx-additional-classpath",
          "displayName" : "Additional classpath",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "redis_service_uuid" : {
          "name" : "redis_service_uuid",
          "displayName" : "redis_service_uuid",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "RecordReader.in" : {
          "name" : "RecordReader.in",
          "displayName" : "RecordReader.in",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : true
        },
        "RecordWriter.out" : {
          "name" : "RecordWriter.out",
          "displayName" : "RecordWriter.out",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : true
        },
        "groovyx-script-file" : {
          "name" : "groovyx-script-file",
          "displayName" : "Script File",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false,
          "resourceDefinition" : {
            "cardinality" : "SINGLE",
            "resourceTypes" : [ "FILE" ]
          }
        },
        "result_field" : {
          "name" : "result_field",
          "displayName" : "result_field",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 0,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "failure" ],
      "scheduledState" : "ENABLED",
      "retryCount" : 10,
      "retriedRelationships" : [ ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "10 mins",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "5f8b7afc-4d06-357a-9201-82a36f850d65",
      "instanceIdentifier" : "2bfc1280-0194-1000-3c9e-283d19fa28c4",
      "name" : "InvokeHTTP",
      "comments" : "",
      "position" : {
        "x" : -400.0,
        "y" : -208.0
      },
      "type" : "org.apache.nifi.processors.standard.InvokeHTTP",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-standard-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "Request Content-Encoding" : "DISABLED",
        "proxy-configuration-service" : null,
        "Request Multipart Form-Data Filename Enabled" : "true",
        "Request Chunked Transfer-Encoding Enabled" : "false",
        "Response Header Request Attributes Prefix" : null,
        "HTTP/2 Disabled" : "False",
        "Connection Timeout" : "5 secs",
        "Response Cookie Strategy" : "DISABLED",
        "Socket Read Timeout" : "15 secs",
        "Socket Idle Connections" : "5",
        "Request Body Enabled" : "true",
        "HTTP URL" : "${my.url}",
        "Request OAuth2 Access Token Provider" : null,
        "Socket Idle Timeout" : "5 mins",
        "Response Redirects Enabled" : "True",
        "Socket Write Timeout" : "15 secs",
        "Request Header Attributes Pattern" : null,
        "Response FlowFile Naming Strategy" : "RANDOM",
        "Response Cache Enabled" : "false",
        "Request Date Header Enabled" : "True",
        "Request Failure Penalization Enabled" : "false",
        "Response Body Attribute Size" : "256",
        "SSL Context Service" : null,
        "Response Generation Required" : "false",
        "Request User-Agent" : null,
        "Response Header Request Attributes Enabled" : "false",
        "HTTP Method" : "GET",
        "Request Username" : null,
        "Request Content-Type" : "${mime.type}",
        "Response Body Attribute Name" : null,
        "Request Digest Authentication Enabled" : "false",
        "Request Multipart Form-Data Name" : null,
        "Response Cache Size" : "10MB",
        "Response Body Ignored" : "false"
      },
      "propertyDescriptors" : {
        "Request Content-Encoding" : {
          "name" : "Request Content-Encoding",
          "displayName" : "Request Content-Encoding",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "proxy-configuration-service" : {
          "name" : "proxy-configuration-service",
          "displayName" : "Proxy Configuration Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request Multipart Form-Data Filename Enabled" : {
          "name" : "Request Multipart Form-Data Filename Enabled",
          "displayName" : "Request Multipart Form-Data Filename Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request Chunked Transfer-Encoding Enabled" : {
          "name" : "Request Chunked Transfer-Encoding Enabled",
          "displayName" : "Request Chunked Transfer-Encoding Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Response Header Request Attributes Prefix" : {
          "name" : "Response Header Request Attributes Prefix",
          "displayName" : "Response Header Request Attributes Prefix",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "HTTP/2 Disabled" : {
          "name" : "HTTP/2 Disabled",
          "displayName" : "HTTP/2 Disabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Connection Timeout" : {
          "name" : "Connection Timeout",
          "displayName" : "Connection Timeout",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Response Cookie Strategy" : {
          "name" : "Response Cookie Strategy",
          "displayName" : "Response Cookie Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request Password" : {
          "name" : "Request Password",
          "displayName" : "Request Password",
          "identifiesControllerService" : false,
          "sensitive" : true,
          "dynamic" : false
        },
        "Socket Read Timeout" : {
          "name" : "Socket Read Timeout",
          "displayName" : "Socket Read Timeout",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Socket Idle Connections" : {
          "name" : "Socket Idle Connections",
          "displayName" : "Socket Idle Connections",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request Body Enabled" : {
          "name" : "Request Body Enabled",
          "displayName" : "Request Body Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "HTTP URL" : {
          "name" : "HTTP URL",
          "displayName" : "HTTP URL",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request OAuth2 Access Token Provider" : {
          "name" : "Request OAuth2 Access Token Provider",
          "displayName" : "Request OAuth2 Access Token Provider",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Socket Idle Timeout" : {
          "name" : "Socket Idle Timeout",
          "displayName" : "Socket Idle Timeout",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Response Redirects Enabled" : {
          "name" : "Response Redirects Enabled",
          "displayName" : "Response Redirects Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Socket Write Timeout" : {
          "name" : "Socket Write Timeout",
          "displayName" : "Socket Write Timeout",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request Header Attributes Pattern" : {
          "name" : "Request Header Attributes Pattern",
          "displayName" : "Request Header Attributes Pattern",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Response FlowFile Naming Strategy" : {
          "name" : "Response FlowFile Naming Strategy",
          "displayName" : "Response FlowFile Naming Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Response Cache Enabled" : {
          "name" : "Response Cache Enabled",
          "displayName" : "Response Cache Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request Date Header Enabled" : {
          "name" : "Request Date Header Enabled",
          "displayName" : "Request Date Header Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request Failure Penalization Enabled" : {
          "name" : "Request Failure Penalization Enabled",
          "displayName" : "Request Failure Penalization Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Response Body Attribute Size" : {
          "name" : "Response Body Attribute Size",
          "displayName" : "Response Body Attribute Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "SSL Context Service" : {
          "name" : "SSL Context Service",
          "displayName" : "SSL Context Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Response Generation Required" : {
          "name" : "Response Generation Required",
          "displayName" : "Response Generation Required",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request User-Agent" : {
          "name" : "Request User-Agent",
          "displayName" : "Request User-Agent",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Response Header Request Attributes Enabled" : {
          "name" : "Response Header Request Attributes Enabled",
          "displayName" : "Response Header Request Attributes Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "HTTP Method" : {
          "name" : "HTTP Method",
          "displayName" : "HTTP Method",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request Username" : {
          "name" : "Request Username",
          "displayName" : "Request Username",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request Content-Type" : {
          "name" : "Request Content-Type",
          "displayName" : "Request Content-Type",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Response Body Attribute Name" : {
          "name" : "Response Body Attribute Name",
          "displayName" : "Response Body Attribute Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request Digest Authentication Enabled" : {
          "name" : "Request Digest Authentication Enabled",
          "displayName" : "Request Digest Authentication Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Request Multipart Form-Data Name" : {
          "name" : "Request Multipart Form-Data Name",
          "displayName" : "Request Multipart Form-Data Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Response Cache Size" : {
          "name" : "Response Cache Size",
          "displayName" : "Response Cache Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Response Body Ignored" : {
          "name" : "Response Body Ignored",
          "displayName" : "Response Body Ignored",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "style" : { },
      "schedulingPeriod" : "0 sec",
      "schedulingStrategy" : "TIMER_DRIVEN",
      "executionNode" : "ALL",
      "penaltyDuration" : "30 sec",
      "yieldDuration" : "1 sec",
      "bulletinLevel" : "WARN",
      "runDurationMillis" : 0,
      "concurrentlySchedulableTaskCount" : 1,
      "autoTerminatedRelationships" : [ "No Retry", "Retry", "Original", "Failure" ],
      "scheduledState" : "ENABLED",
      "retryCount" : 1,
      "retriedRelationships" : [ "Retry" ],
      "backoffMechanism" : "PENALIZE_FLOWFILE",
      "maxBackoffPeriod" : "5 sec",
      "componentType" : "PROCESSOR",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    } ],
    "inputPorts" : [ ],
    "outputPorts" : [ ],
    "connections" : [ {
      "identifier" : "91e3710e-6fd7-34c9-977e-656cd7b84456",
      "instanceIdentifier" : "39298a54-0194-1000-c1f6-7e9003af4086",
      "name" : "",
      "source" : {
        "id" : "39293df4-0194-1000-ad06-5c239b50f60c",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "LookupRecord SQL PG",
        "comments" : "",
        "instanceIdentifier" : "b6361cf9-8118-3695-bb96-a746c1b454dd"
      },
      "destination" : {
        "id" : "da506589-445b-35f9-a911-fac8ff40408a",
        "type" : "FUNNEL",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "Funnel",
        "comments" : "",
        "instanceIdentifier" : "392974ce-0194-1000-55b9-689fa6dbc8c3"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "bce5a9dc-4abc-319a-ae2f-ceca004f9576",
      "instanceIdentifier" : "2c097b00-0194-1000-604e-827a2994fe2b",
      "name" : "",
      "source" : {
        "id" : "7cc6bf73-67e1-3b57-8570-237832855bd7",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "PutFile",
        "comments" : "",
        "instanceIdentifier" : "2c094d62-0194-1000-fcf2-4677a6d0f55c"
      },
      "destination" : {
        "id" : "161feaec-9136-3979-8aa3-13c07e455e5e",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "PutDatabaseRecord",
        "comments" : "",
        "instanceIdentifier" : "2c0bd9ee-0194-1000-8da2-b435e5be4a91"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ {
        "x" : 96.0,
        "y" : 336.0
      } ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "df380e73-f025-3b99-a524-8f57389274db",
      "instanceIdentifier" : "4739908f-0194-1000-bca8-842917f38299",
      "name" : "",
      "source" : {
        "id" : "1459e344-3352-38da-96cf-d06904967b8b",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "UpdateRecord",
        "comments" : "",
        "instanceIdentifier" : "2c28ab97-0194-1000-141d-d38733f06e97"
      },
      "destination" : {
        "id" : "39293df4-0194-1000-ad06-5c239b50f60c",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "LookupRecord SQL PG",
        "comments" : "",
        "instanceIdentifier" : "b6361cf9-8118-3695-bb96-a746c1b454dd"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "21ab4cd7-8df9-3ebc-a32f-527c46c4831f",
      "instanceIdentifier" : "2dc85346-0194-1000-d3e0-3aed9bf966b2",
      "name" : "",
      "source" : {
        "id" : "2dc8221d-0194-1000-3ccf-00c3ff371c8e",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "LookupRecord Redis (groovy)",
        "comments" : "",
        "instanceIdentifier" : "591e3339-3cfc-3dba-80f9-3d4d3ed4c9f2"
      },
      "destination" : {
        "id" : "157483b6-472b-3e31-9b98-f68a012346bb",
        "type" : "FUNNEL",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "Funnel",
        "comments" : "",
        "instanceIdentifier" : "2dc83d5f-0194-1000-a6f0-129a9902da4c"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "3d51e3f7-f045-337c-b153-795a29131f95",
      "instanceIdentifier" : "2bfcd241-0194-1000-bf88-cb3bb37c389c",
      "name" : "",
      "source" : {
        "id" : "5f8b7afc-4d06-357a-9201-82a36f850d65",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "InvokeHTTP",
        "comments" : "",
        "instanceIdentifier" : "2bfc1280-0194-1000-3c9e-283d19fa28c4"
      },
      "destination" : {
        "id" : "01d6e7c6-354e-3564-b423-1c05e61539b3",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "QueryRecord",
        "comments" : "Фильтрация бракованных записей \nКапитализация первой буквы фамилии\nПрисвоение порядкового номера каждой строке",
        "instanceIdentifier" : "2bfca6c9-0194-1000-3388-e7ee0a4d67b0"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "Response" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ {
        "x" : 96.0,
        "y" : -72.0
      } ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "27b35e69-0857-3645-b5a0-c6aa22c52668",
      "instanceIdentifier" : "2c48748f-0194-1000-7410-d753aa2a93df",
      "name" : "",
      "source" : {
        "id" : "66d8e3f0-8bb5-3fbb-b019-be40f900a9b0",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "LookupRecord SQL",
        "comments" : "",
        "instanceIdentifier" : "2c43ded2-0194-1000-ebfa-84b4a3c1edc3"
      },
      "destination" : {
        "id" : "ae3012c6-310f-3b09-a0c1-87150bc8708f",
        "type" : "FUNNEL",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "Funnel",
        "comments" : "",
        "instanceIdentifier" : "2c4864a8-0194-1000-1858-f6c8bcf0ba5e"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "a6ec56ed-02fc-3e61-8aa0-4ce72992dc9f",
      "instanceIdentifier" : "3951e13a-0194-1000-7d17-7a6591afa401",
      "name" : "",
      "source" : {
        "id" : "1459e344-3352-38da-96cf-d06904967b8b",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "UpdateRecord",
        "comments" : "",
        "instanceIdentifier" : "2c28ab97-0194-1000-141d-d38733f06e97"
      },
      "destination" : {
        "id" : "0e273e3b-e45f-34fa-9f36-d7c8a46b21d9",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "LookupRecord CSV",
        "comments" : "",
        "instanceIdentifier" : "2c287f6d-0194-1000-97a4-3b23da0f494a"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "cce86869-5ad6-3882-927d-1e442a3a8f20",
      "instanceIdentifier" : "2da1aee1-0194-1000-e545-b95b31795964",
      "name" : "",
      "source" : {
        "id" : "2da18838-0194-1000-12f8-a9e336bc2de7",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "PutRecord2Redis",
        "comments" : "Отправляем записи в Redis методом MSET",
        "instanceIdentifier" : "6ac1c677-a8e1-39a9-d955-e50583fb51d9"
      },
      "destination" : {
        "id" : "7cc6bf73-67e1-3b57-8570-237832855bd7",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "PutFile",
        "comments" : "",
        "instanceIdentifier" : "2c094d62-0194-1000-fcf2-4677a6d0f55c"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ {
        "x" : 88.0,
        "y" : 192.0
      } ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "6c79c1bb-5cc9-3721-98c7-d578ced5aa49",
      "instanceIdentifier" : "2c178f0d-0194-1000-b75f-32b1551078d2",
      "name" : "",
      "source" : {
        "id" : "161feaec-9136-3979-8aa3-13c07e455e5e",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "PutDatabaseRecord",
        "comments" : "",
        "instanceIdentifier" : "2c0bd9ee-0194-1000-8da2-b435e5be4a91"
      },
      "destination" : {
        "id" : "7f4e4c07-96e4-3f94-9ec8-ee6c9aacc188",
        "type" : "FUNNEL",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "Funnel",
        "comments" : "",
        "instanceIdentifier" : "2c016bdb-0194-1000-8c37-7eb2491b4d00"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "600 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "3f53a982-4bc1-3a85-b767-af2ec4fd8dbd",
      "instanceIdentifier" : "47396c0c-0194-1000-7b7c-17129da6736b",
      "name" : "",
      "source" : {
        "id" : "1459e344-3352-38da-96cf-d06904967b8b",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "UpdateRecord",
        "comments" : "",
        "instanceIdentifier" : "2c28ab97-0194-1000-141d-d38733f06e97"
      },
      "destination" : {
        "id" : "2cfaca06-0194-1000-da1b-42fca4f26679",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "LookupRecord Redis",
        "comments" : "",
        "instanceIdentifier" : "7fafa1b8-f3ca-32cd-eeb8-bf05f023efdf"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "d0dfaa44-380a-3d4d-a7a6-8fa71fb98dbd",
      "instanceIdentifier" : "2bfc22a1-0194-1000-6c3e-5b29a0e86e1d",
      "name" : "",
      "source" : {
        "id" : "3713e726-e155-3c6a-a3bd-f9e6ea40b2a8",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "Инициализация атрибутов",
        "comments" : "",
        "instanceIdentifier" : "2bfb3bd7-0194-1000-ae98-6ef3900877b7"
      },
      "destination" : {
        "id" : "5f8b7afc-4d06-357a-9201-82a36f850d65",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "InvokeHTTP",
        "comments" : "",
        "instanceIdentifier" : "2bfc1280-0194-1000-3c9e-283d19fa28c4"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ {
        "x" : 96.0,
        "y" : -352.0
      } ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "1dcb91c4-c2ec-3c82-ab8b-a9b9d0177163",
      "instanceIdentifier" : "2c254513-0194-1000-ec1c-1160aa036075",
      "name" : "",
      "source" : {
        "id" : "1623b2ae-1144-3ccd-a66a-5b48ae6f7e9b",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "GenerateRecord",
        "comments" : "",
        "instanceIdentifier" : "2c214498-0194-1000-7ddd-454632f4a9ca"
      },
      "destination" : {
        "id" : "1459e344-3352-38da-96cf-d06904967b8b",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "UpdateRecord",
        "comments" : "",
        "instanceIdentifier" : "2c28ab97-0194-1000-141d-d38733f06e97"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "e28aeba0-d3b7-3aa5-86c2-acf89c50ece8",
      "instanceIdentifier" : "2cfb0577-0194-1000-a114-3603c6c08ffe",
      "name" : "",
      "source" : {
        "id" : "2cfaca06-0194-1000-da1b-42fca4f26679",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "LookupRecord Redis",
        "comments" : "",
        "instanceIdentifier" : "7fafa1b8-f3ca-32cd-eeb8-bf05f023efdf"
      },
      "destination" : {
        "id" : "09de174f-3566-39e3-a526-739e877c98b8",
        "type" : "FUNNEL",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "Funnel",
        "comments" : "",
        "instanceIdentifier" : "2cfaf5fa-0194-1000-98e3-89961f88caee"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "0b8c2a04-5087-3cb7-9607-4ab345e5ac74",
      "instanceIdentifier" : "2c3030ab-0194-1000-2732-9a0673497c55",
      "name" : "",
      "source" : {
        "id" : "0e273e3b-e45f-34fa-9f36-d7c8a46b21d9",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "LookupRecord CSV",
        "comments" : "",
        "instanceIdentifier" : "2c287f6d-0194-1000-97a4-3b23da0f494a"
      },
      "destination" : {
        "id" : "77dadca9-5993-31de-8765-8f03d7535f0e",
        "type" : "FUNNEL",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "Funnel",
        "comments" : "",
        "instanceIdentifier" : "2c253954-0194-1000-dc61-4baf2fe7431b"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "135061aa-6419-32b0-9550-84146e620953",
      "instanceIdentifier" : "47397e2d-0194-1000-6eae-f489fcd292ff",
      "name" : "",
      "source" : {
        "id" : "1459e344-3352-38da-96cf-d06904967b8b",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "UpdateRecord",
        "comments" : "",
        "instanceIdentifier" : "2c28ab97-0194-1000-141d-d38733f06e97"
      },
      "destination" : {
        "id" : "2dc8221d-0194-1000-3ccf-00c3ff371c8e",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "LookupRecord Redis (groovy)",
        "comments" : "",
        "instanceIdentifier" : "591e3339-3cfc-3dba-80f9-3d4d3ed4c9f2"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "e7ac9ac4-5011-3bf7-8c6a-000c43ef325d",
      "instanceIdentifier" : "2c017f79-0194-1000-dfa8-83af187d8c5e",
      "name" : "",
      "source" : {
        "id" : "01d6e7c6-354e-3564-b423-1c05e61539b3",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "QueryRecord",
        "comments" : "Фильтрация бракованных записей \nКапитализация первой буквы фамилии\nПрисвоение порядкового номера каждой строке",
        "instanceIdentifier" : "2bfca6c9-0194-1000-3388-e7ee0a4d67b0"
      },
      "destination" : {
        "id" : "161feaec-9136-3979-8aa3-13c07e455e5e",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "PutDatabaseRecord",
        "comments" : "",
        "instanceIdentifier" : "2c0bd9ee-0194-1000-8da2-b435e5be4a91"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "out" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ {
        "x" : 88.0,
        "y" : 56.0
      } ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "ceb5ca3f-2462-3219-8496-e57af9867fe7",
      "instanceIdentifier" : "2c8da2f6-0194-1000-4a55-be916d97b9e6",
      "name" : "",
      "source" : {
        "id" : "b1893589-ac56-32e0-9605-7dea7695a9fe",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "ExecuteSQL",
        "comments" : "",
        "instanceIdentifier" : "2c879e40-0194-1000-c7fe-2c8a7641efc9"
      },
      "destination" : {
        "id" : "5f8b7afc-4d06-357a-9201-82a36f850d65",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "InvokeHTTP",
        "comments" : "",
        "instanceIdentifier" : "2bfc1280-0194-1000-3c9e-283d19fa28c4"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ {
        "x" : 88.0,
        "y" : -216.0
      } ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "3dc8c710-9344-3df1-b01c-a57a1766e108",
      "instanceIdentifier" : "47395c6f-0194-1000-660d-c26c062f5eca",
      "name" : "",
      "source" : {
        "id" : "1459e344-3352-38da-96cf-d06904967b8b",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "UpdateRecord",
        "comments" : "",
        "instanceIdentifier" : "2c28ab97-0194-1000-141d-d38733f06e97"
      },
      "destination" : {
        "id" : "66d8e3f0-8bb5-3fbb-b019-be40f900a9b0",
        "type" : "PROCESSOR",
        "groupId" : "9c460797-72cc-35df-85b0-e59308273868",
        "name" : "LookupRecord SQL",
        "comments" : "",
        "instanceIdentifier" : "2c43ded2-0194-1000-ebfa-84b4a3c1edc3"
      },
      "labelIndex" : 0,
      "zIndex" : 0,
      "selectedRelationships" : [ "success" ],
      "backPressureObjectThreshold" : 10000,
      "backPressureDataSizeThreshold" : "1 GB",
      "flowFileExpiration" : "0 sec",
      "prioritizers" : [ ],
      "bends" : [ ],
      "loadBalanceStrategy" : "DO_NOT_LOAD_BALANCE",
      "partitioningAttribute" : "",
      "loadBalanceCompression" : "DO_NOT_COMPRESS",
      "componentType" : "CONNECTION",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    } ],
    "labels" : [ ],
    "funnels" : [ {
      "identifier" : "7f4e4c07-96e4-3f94-9ec8-ee6c9aacc188",
      "instanceIdentifier" : "2c016bdb-0194-1000-8c37-7eb2491b4d00",
      "position" : {
        "x" : -240.0,
        "y" : 528.0
      },
      "componentType" : "FUNNEL",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "77dadca9-5993-31de-8765-8f03d7535f0e",
      "instanceIdentifier" : "2c253954-0194-1000-dc61-4baf2fe7431b",
      "position" : {
        "x" : 1784.0,
        "y" : -192.0
      },
      "componentType" : "FUNNEL",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "da506589-445b-35f9-a911-fac8ff40408a",
      "instanceIdentifier" : "392974ce-0194-1000-55b9-689fa6dbc8c3",
      "position" : {
        "x" : 1792.0,
        "y" : 376.0
      },
      "componentType" : "FUNNEL",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "157483b6-472b-3e31-9b98-f68a012346bb",
      "instanceIdentifier" : "2dc83d5f-0194-1000-a6f0-129a9902da4c",
      "position" : {
        "x" : 1792.0,
        "y" : 232.0
      },
      "componentType" : "FUNNEL",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "ae3012c6-310f-3b09-a0c1-87150bc8708f",
      "instanceIdentifier" : "2c4864a8-0194-1000-1858-f6c8bcf0ba5e",
      "position" : {
        "x" : 1792.0,
        "y" : -48.0
      },
      "componentType" : "FUNNEL",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "09de174f-3566-39e3-a526-739e877c98b8",
      "instanceIdentifier" : "2cfaf5fa-0194-1000-98e3-89961f88caee",
      "position" : {
        "x" : 1792.0,
        "y" : 96.0
      },
      "componentType" : "FUNNEL",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    } ],
    "controllerServices" : [ {
      "identifier" : "03905c43-653c-3202-92ca-d65d4c2d6650",
      "instanceIdentifier" : "2ca4c1ba-0194-1000-65f5-a8ff8697d73e",
      "name" : "AvroSchemaRegistry",
      "comments" : "",
      "type" : "org.apache.nifi.schemaregistry.services.AvroSchemaRegistry",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-registry-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "avro-reg-validated-field-names" : "true",
        "test_record" : "{\n  \"type\": \"record\",\n  \"name\": \"Person\",\n  \"fields\": [\n    {\n      \"name\": \"surname\",\n      \"type\": \"string\"\n    },\n    {\n      \"name\": \"birtdate\",\n      \"type\": \"string\"\n    },\n    {\n      \"name\": \"rand\",\n      \"type\": \"long\"\n    },\n    {\n      \"name\": \"test\",\n      \"type\": [\"null\", \"string\"]\n    }\n  ]\n}",
        "init_record" : "{ \"name\": \"MyClass\", \"type\": \"record\", \"namespace\": \"com.acme.avro\", \"fields\": [ { \"name\": \"surname\", \"type\": \"string\" } ] }",
        "final_record" : "{\n  \"type\": \"record\",\n  \"name\": \"Person\",\n  \"fields\": [\n    {\n      \"name\": \"surname\",\n      \"type\": \"string\"\n    },\n    {\n      \"name\": \"birthdate\",\n      \"type\": \"string\"\n    }\n  ]\n}"
      },
      "propertyDescriptors" : {
        "avro-reg-validated-field-names" : {
          "name" : "avro-reg-validated-field-names",
          "displayName" : "Validate Field Names",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "test_record" : {
          "name" : "test_record",
          "displayName" : "test_record",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "init_record" : {
          "name" : "init_record",
          "displayName" : "init_record",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        },
        "final_record" : {
          "name" : "final_record",
          "displayName" : "final_record",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : true
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.schemaregistry.services.SchemaRegistry",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "faf25201-e4a5-3692-b168-2195fd1a12a7",
      "instanceIdentifier" : "2bff5384-0194-1000-b1e4-2553e8395b79",
      "name" : "CSVRecordSetWriter",
      "comments" : "",
      "type" : "org.apache.nifi.csv.CSVRecordSetWriter",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-record-serialization-services-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "schema-reference-reader" : null,
        "schema-branch" : null,
        "CSV Format" : "custom",
        "Include Header Line" : "true",
        "schema-cache" : null,
        "Escape Character" : "\\",
        "Date Format" : "dd.MM.yyyy",
        "Null String" : null,
        "Trim Fields" : "true",
        "schema-registry" : null,
        "Time Format" : null,
        "Comment Marker" : null,
        "schema-access-strategy" : "inherit-record-schema",
        "schema-version" : null,
        "csvutils-character-set" : "UTF-8",
        "schema-text" : "${avro.schema}",
        "csv-writer" : "commons-csv",
        "Quote Character" : "\"",
        "Value Separator" : ",",
        "Record Separator" : "\\n",
        "Timestamp Format" : null,
        "Schema Write Strategy" : "full-schema-attribute",
        "schema-name" : "${schema.name}",
        "Quote Mode" : "MINIMAL",
        "Schema Reference Writer" : null,
        "Include Trailing Delimiter" : "false"
      },
      "propertyDescriptors" : {
        "schema-reference-reader" : {
          "name" : "schema-reference-reader",
          "displayName" : "Schema Reference Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-branch" : {
          "name" : "schema-branch",
          "displayName" : "Schema Branch",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "CSV Format" : {
          "name" : "CSV Format",
          "displayName" : "CSV Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Include Header Line" : {
          "name" : "Include Header Line",
          "displayName" : "Include Header Line",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-cache" : {
          "name" : "schema-cache",
          "displayName" : "Schema Cache",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Escape Character" : {
          "name" : "Escape Character",
          "displayName" : "Escape Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Date Format" : {
          "name" : "Date Format",
          "displayName" : "Date Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Null String" : {
          "name" : "Null String",
          "displayName" : "Null String",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Trim Fields" : {
          "name" : "Trim Fields",
          "displayName" : "Trim Fields",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-registry" : {
          "name" : "schema-registry",
          "displayName" : "Schema Registry",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Time Format" : {
          "name" : "Time Format",
          "displayName" : "Time Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Comment Marker" : {
          "name" : "Comment Marker",
          "displayName" : "Comment Marker",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-access-strategy" : {
          "name" : "schema-access-strategy",
          "displayName" : "Schema Access Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-version" : {
          "name" : "schema-version",
          "displayName" : "Schema Version",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "csvutils-character-set" : {
          "name" : "csvutils-character-set",
          "displayName" : "Character Set",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-text" : {
          "name" : "schema-text",
          "displayName" : "Schema Text",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "csv-writer" : {
          "name" : "csv-writer",
          "displayName" : "CSV Writer",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Quote Character" : {
          "name" : "Quote Character",
          "displayName" : "Quote Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Value Separator" : {
          "name" : "Value Separator",
          "displayName" : "Value Separator",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Record Separator" : {
          "name" : "Record Separator",
          "displayName" : "Record Separator",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Timestamp Format" : {
          "name" : "Timestamp Format",
          "displayName" : "Timestamp Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Schema Write Strategy" : {
          "name" : "Schema Write Strategy",
          "displayName" : "Schema Write Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-name" : {
          "name" : "schema-name",
          "displayName" : "Schema Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Quote Mode" : {
          "name" : "Quote Mode",
          "displayName" : "Quote Mode",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Schema Reference Writer" : {
          "name" : "Schema Reference Writer",
          "displayName" : "Schema Reference Writer",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Include Trailing Delimiter" : {
          "name" : "Include Trailing Delimiter",
          "displayName" : "Include Trailing Delimiter",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.serialization.RecordSetWriterFactory",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "83577715-eba1-3a40-b647-02746169ff82",
      "instanceIdentifier" : "2cb32474-0194-1000-b479-cb7c975dd0c9",
      "name" : "CSVRecordSetWriter_AVRO",
      "comments" : "",
      "type" : "org.apache.nifi.csv.CSVRecordSetWriter",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-record-serialization-services-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "schema-reference-reader" : null,
        "schema-branch" : null,
        "CSV Format" : "custom",
        "Include Header Line" : "true",
        "schema-cache" : null,
        "Escape Character" : "\\",
        "Date Format" : "dd.MM.yyyy",
        "Null String" : null,
        "Trim Fields" : "true",
        "schema-registry" : "03905c43-653c-3202-92ca-d65d4c2d6650",
        "Time Format" : null,
        "Comment Marker" : null,
        "schema-access-strategy" : "schema-name",
        "schema-version" : null,
        "csvutils-character-set" : "UTF-8",
        "schema-text" : "${avro.schema}",
        "csv-writer" : "commons-csv",
        "Quote Character" : "\"",
        "Value Separator" : ",",
        "Record Separator" : "\\n",
        "Timestamp Format" : null,
        "Schema Write Strategy" : "no-schema",
        "schema-name" : "final_record",
        "Quote Mode" : "MINIMAL",
        "Schema Reference Writer" : null,
        "Include Trailing Delimiter" : "false"
      },
      "propertyDescriptors" : {
        "schema-reference-reader" : {
          "name" : "schema-reference-reader",
          "displayName" : "Schema Reference Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-branch" : {
          "name" : "schema-branch",
          "displayName" : "Schema Branch",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "CSV Format" : {
          "name" : "CSV Format",
          "displayName" : "CSV Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Include Header Line" : {
          "name" : "Include Header Line",
          "displayName" : "Include Header Line",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-cache" : {
          "name" : "schema-cache",
          "displayName" : "Schema Cache",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Escape Character" : {
          "name" : "Escape Character",
          "displayName" : "Escape Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Date Format" : {
          "name" : "Date Format",
          "displayName" : "Date Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Null String" : {
          "name" : "Null String",
          "displayName" : "Null String",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Trim Fields" : {
          "name" : "Trim Fields",
          "displayName" : "Trim Fields",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-registry" : {
          "name" : "schema-registry",
          "displayName" : "Schema Registry",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Time Format" : {
          "name" : "Time Format",
          "displayName" : "Time Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Comment Marker" : {
          "name" : "Comment Marker",
          "displayName" : "Comment Marker",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-access-strategy" : {
          "name" : "schema-access-strategy",
          "displayName" : "Schema Access Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-version" : {
          "name" : "schema-version",
          "displayName" : "Schema Version",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "csvutils-character-set" : {
          "name" : "csvutils-character-set",
          "displayName" : "Character Set",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-text" : {
          "name" : "schema-text",
          "displayName" : "Schema Text",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "csv-writer" : {
          "name" : "csv-writer",
          "displayName" : "CSV Writer",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Quote Character" : {
          "name" : "Quote Character",
          "displayName" : "Quote Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Value Separator" : {
          "name" : "Value Separator",
          "displayName" : "Value Separator",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Record Separator" : {
          "name" : "Record Separator",
          "displayName" : "Record Separator",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Timestamp Format" : {
          "name" : "Timestamp Format",
          "displayName" : "Timestamp Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Schema Write Strategy" : {
          "name" : "Schema Write Strategy",
          "displayName" : "Schema Write Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-name" : {
          "name" : "schema-name",
          "displayName" : "Schema Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Quote Mode" : {
          "name" : "Quote Mode",
          "displayName" : "Quote Mode",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Schema Reference Writer" : {
          "name" : "Schema Reference Writer",
          "displayName" : "Schema Reference Writer",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Include Trailing Delimiter" : {
          "name" : "Include Trailing Delimiter",
          "displayName" : "Include Trailing Delimiter",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.serialization.RecordSetWriterFactory",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "d372595d-84bc-3723-94b1-11acd5a3fcd4",
      "instanceIdentifier" : "2cfb7fd4-0194-1000-b742-7649409b0a12",
      "name" : "DistributedMapCacheLookupService",
      "comments" : "",
      "type" : "org.apache.nifi.lookup.DistributedMapCacheLookupService",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-lookup-services-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "character-encoding" : "UTF-8",
        "distributed-map-cache-service" : "2ea43e8d-fbc3-361c-86ff-7b9c20fe9621"
      },
      "propertyDescriptors" : {
        "character-encoding" : {
          "name" : "character-encoding",
          "displayName" : "Character Encoding",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "distributed-map-cache-service" : {
          "name" : "distributed-map-cache-service",
          "displayName" : "Distributed Cache Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.lookup.LookupService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      }, {
        "type" : "org.apache.nifi.lookup.StringLookupService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "90f42e16-b479-39cb-a657-f7cbfffe8ee0",
      "instanceIdentifier" : "2df3873e-0194-1000-5e32-1896a62bc36a",
      "name" : "JsonRecordSetWriter",
      "comments" : "",
      "type" : "org.apache.nifi.json.JsonRecordSetWriter",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-record-serialization-services-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "schema-reference-reader" : null,
        "schema-branch" : null,
        "Allow Scientific Notation" : "false",
        "compression-level" : "1",
        "schema-cache" : null,
        "Timestamp Format" : null,
        "Date Format" : null,
        "Pretty Print JSON" : "false",
        "compression-format" : "none",
        "Schema Write Strategy" : "no-schema",
        "suppress-nulls" : "never-suppress",
        "output-grouping" : "output-oneline",
        "schema-name" : "test_record",
        "schema-registry" : "03905c43-653c-3202-92ca-d65d4c2d6650",
        "Time Format" : null,
        "schema-access-strategy" : "schema-name",
        "schema-version" : null,
        "schema-text" : "${avro.schema}",
        "Schema Reference Writer" : null
      },
      "propertyDescriptors" : {
        "schema-reference-reader" : {
          "name" : "schema-reference-reader",
          "displayName" : "Schema Reference Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-branch" : {
          "name" : "schema-branch",
          "displayName" : "Schema Branch",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Allow Scientific Notation" : {
          "name" : "Allow Scientific Notation",
          "displayName" : "Allow Scientific Notation",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "compression-level" : {
          "name" : "compression-level",
          "displayName" : "Compression Level",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-cache" : {
          "name" : "schema-cache",
          "displayName" : "Schema Cache",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Timestamp Format" : {
          "name" : "Timestamp Format",
          "displayName" : "Timestamp Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Date Format" : {
          "name" : "Date Format",
          "displayName" : "Date Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Pretty Print JSON" : {
          "name" : "Pretty Print JSON",
          "displayName" : "Pretty Print JSON",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "compression-format" : {
          "name" : "compression-format",
          "displayName" : "Compression Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Schema Write Strategy" : {
          "name" : "Schema Write Strategy",
          "displayName" : "Schema Write Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "suppress-nulls" : {
          "name" : "suppress-nulls",
          "displayName" : "Suppress Null Values",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "output-grouping" : {
          "name" : "output-grouping",
          "displayName" : "Output Grouping",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-name" : {
          "name" : "schema-name",
          "displayName" : "Schema Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-registry" : {
          "name" : "schema-registry",
          "displayName" : "Schema Registry",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Time Format" : {
          "name" : "Time Format",
          "displayName" : "Time Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-access-strategy" : {
          "name" : "schema-access-strategy",
          "displayName" : "Schema Access Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-version" : {
          "name" : "schema-version",
          "displayName" : "Schema Version",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-text" : {
          "name" : "schema-text",
          "displayName" : "Schema Text",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Schema Reference Writer" : {
          "name" : "Schema Reference Writer",
          "displayName" : "Schema Reference Writer",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.serialization.RecordSetWriterFactory",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "57daac09-8acc-3b80-bd3e-28b5166edf39",
      "instanceIdentifier" : "46c5456f-0194-1000-79d8-c162c5cde998",
      "name" : "SimpleDatabaseLookupService_DuckDB",
      "comments" : "",
      "type" : "org.apache.nifi.lookup.db.SimpleDatabaseLookupService",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-lookup-services-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "dbrecord-lookup-dbcp-service" : "7a89b158-bbd8-335b-8513-1dbb82fb7919",
        "dbrecord-lookup-clear-cache-on-enabled" : "true",
        "lookup-value-column" : "surname",
        "dbrecord-lookup-cache-size" : "0",
        "dbrecord-lookup-key-column" : "id",
        "Cache Expiration" : null,
        "dbrecord-lookup-table-name" : "russian_surnames"
      },
      "propertyDescriptors" : {
        "dbrecord-lookup-dbcp-service" : {
          "name" : "dbrecord-lookup-dbcp-service",
          "displayName" : "Database Connection Pooling Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-clear-cache-on-enabled" : {
          "name" : "dbrecord-lookup-clear-cache-on-enabled",
          "displayName" : "Clear Cache on Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "lookup-value-column" : {
          "name" : "lookup-value-column",
          "displayName" : "Lookup Value Column",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-cache-size" : {
          "name" : "dbrecord-lookup-cache-size",
          "displayName" : "Cache Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-key-column" : {
          "name" : "dbrecord-lookup-key-column",
          "displayName" : "Lookup Key Column",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Cache Expiration" : {
          "name" : "Cache Expiration",
          "displayName" : "Cache Expiration",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-table-name" : {
          "name" : "dbrecord-lookup-table-name",
          "displayName" : "Table Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.lookup.LookupService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      }, {
        "type" : "org.apache.nifi.lookup.StringLookupService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "ccc4e498-6172-3661-94f9-e53602145aab",
      "instanceIdentifier" : "2c1ccfc5-0194-1000-7436-21fdfd25aa63",
      "name" : "CSVReader_with_header",
      "comments" : "",
      "type" : "org.apache.nifi.csv.CSVReader",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-record-serialization-services-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "schema-reference-reader" : null,
        "ignore-csv-header" : "false",
        "schema-branch" : null,
        "Trim double quote" : "true",
        "CSV Format" : "custom",
        "Quote Character" : "\"",
        "csvutils-allow-duplicate-header-names" : "true",
        "Value Separator" : ",",
        "Record Separator" : "\\n",
        "Timestamp Format" : null,
        "Escape Character" : "\\",
        "Date Format" : "yyyy-MM-dd",
        "Null String" : null,
        "Skip Header Line" : "true",
        "Trim Fields" : "true",
        "schema-name" : "${schema.name}",
        "schema-registry" : null,
        "csv-reader-csv-parser" : "commons-csv",
        "Time Format" : null,
        "Comment Marker" : null,
        "schema-access-strategy" : "schema-text-property",
        "schema-version" : null,
        "csvutils-character-set" : "UTF-8",
        "schema-text" : "${avro.schema}"
      },
      "propertyDescriptors" : {
        "schema-reference-reader" : {
          "name" : "schema-reference-reader",
          "displayName" : "Schema Reference Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "ignore-csv-header" : {
          "name" : "ignore-csv-header",
          "displayName" : "Ignore CSV Header Column Names",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-branch" : {
          "name" : "schema-branch",
          "displayName" : "Schema Branch",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Trim double quote" : {
          "name" : "Trim double quote",
          "displayName" : "Trim double quote",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "CSV Format" : {
          "name" : "CSV Format",
          "displayName" : "CSV Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Quote Character" : {
          "name" : "Quote Character",
          "displayName" : "Quote Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "csvutils-allow-duplicate-header-names" : {
          "name" : "csvutils-allow-duplicate-header-names",
          "displayName" : "Allow Duplicate Header Names",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Value Separator" : {
          "name" : "Value Separator",
          "displayName" : "Value Separator",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Record Separator" : {
          "name" : "Record Separator",
          "displayName" : "Record Separator",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Timestamp Format" : {
          "name" : "Timestamp Format",
          "displayName" : "Timestamp Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Escape Character" : {
          "name" : "Escape Character",
          "displayName" : "Escape Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Date Format" : {
          "name" : "Date Format",
          "displayName" : "Date Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Null String" : {
          "name" : "Null String",
          "displayName" : "Null String",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Skip Header Line" : {
          "name" : "Skip Header Line",
          "displayName" : "Treat First Line as Header",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Trim Fields" : {
          "name" : "Trim Fields",
          "displayName" : "Trim Fields",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-name" : {
          "name" : "schema-name",
          "displayName" : "Schema Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-registry" : {
          "name" : "schema-registry",
          "displayName" : "Schema Registry",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "csv-reader-csv-parser" : {
          "name" : "csv-reader-csv-parser",
          "displayName" : "CSV Parser",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Time Format" : {
          "name" : "Time Format",
          "displayName" : "Time Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Comment Marker" : {
          "name" : "Comment Marker",
          "displayName" : "Comment Marker",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-access-strategy" : {
          "name" : "schema-access-strategy",
          "displayName" : "Schema Access Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-version" : {
          "name" : "schema-version",
          "displayName" : "Schema Version",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "csvutils-character-set" : {
          "name" : "csvutils-character-set",
          "displayName" : "Character Set",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-text" : {
          "name" : "schema-text",
          "displayName" : "Schema Text",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.serialization.RecordReaderFactory",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "9ec3ee77-3221-3d62-92f6-8267b10d0e88",
      "instanceIdentifier" : "392bc897-0194-1000-fc12-61741ce6aed7",
      "name" : "DBCPConnectionPool_pg",
      "comments" : "",
      "type" : "org.apache.nifi.dbcp.DBCPConnectionPool",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-dbcp-service-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "dbcp-min-idle-conns" : "0",
        "Max Wait Time" : "500 millis",
        "Database Driver Class Name" : "org.postgresql.Driver",
        "dbcp-min-evictable-idle-time" : "30 mins",
        "Max Total Connections" : "8",
        "dbcp-max-conn-lifetime" : "-1",
        "Validation-query" : null,
        "Database Connection URL" : "jdbc:postgresql://localhost:5432/postgres",
        "dbcp-time-between-eviction-runs" : "-1",
        "Database User" : "postgres",
        "kerberos-user-service" : null,
        "dbcp-soft-min-evictable-idle-time" : "-1",
        "database-driver-locations" : "./extensions/postgresql-42.7.4.jar",
        "dbcp-max-idle-conns" : "8"
      },
      "propertyDescriptors" : {
        "dbcp-min-idle-conns" : {
          "name" : "dbcp-min-idle-conns",
          "displayName" : "Minimum Idle Connections",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Max Wait Time" : {
          "name" : "Max Wait Time",
          "displayName" : "Max Wait Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Database Driver Class Name" : {
          "name" : "Database Driver Class Name",
          "displayName" : "Database Driver Class Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-min-evictable-idle-time" : {
          "name" : "dbcp-min-evictable-idle-time",
          "displayName" : "Minimum Evictable Idle Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Max Total Connections" : {
          "name" : "Max Total Connections",
          "displayName" : "Max Total Connections",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-max-conn-lifetime" : {
          "name" : "dbcp-max-conn-lifetime",
          "displayName" : "Max Connection Lifetime",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Validation-query" : {
          "name" : "Validation-query",
          "displayName" : "Validation query",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Database Connection URL" : {
          "name" : "Database Connection URL",
          "displayName" : "Database Connection URL",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-time-between-eviction-runs" : {
          "name" : "dbcp-time-between-eviction-runs",
          "displayName" : "Time Between Eviction Runs",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Database User" : {
          "name" : "Database User",
          "displayName" : "Database User",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "kerberos-user-service" : {
          "name" : "kerberos-user-service",
          "displayName" : "Kerberos User Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-soft-min-evictable-idle-time" : {
          "name" : "dbcp-soft-min-evictable-idle-time",
          "displayName" : "Soft Minimum Evictable Idle Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "database-driver-locations" : {
          "name" : "database-driver-locations",
          "displayName" : "Database Driver Location(s)",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false,
          "resourceDefinition" : {
            "cardinality" : "MULTIPLE",
            "resourceTypes" : [ "URL", "DIRECTORY", "FILE" ]
          }
        },
        "dbcp-max-idle-conns" : {
          "name" : "dbcp-max-idle-conns",
          "displayName" : "Max Idle Connections",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Password" : {
          "name" : "Password",
          "displayName" : "Password",
          "identifiesControllerService" : false,
          "sensitive" : true,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.dbcp.DBCPService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "72546ad6-c524-3bb0-ae4d-7698eea4f1e8",
      "instanceIdentifier" : "2c0e1772-0194-1000-3ff5-fc43c0dd55e8",
      "name" : "DBCPConnectionPool",
      "comments" : "",
      "type" : "org.apache.nifi.dbcp.DBCPConnectionPool",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-dbcp-service-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "dbcp-min-idle-conns" : "0",
        "Max Wait Time" : "500 millis",
        "Database Driver Class Name" : "org.sqlite.JDBC",
        "dbcp-min-evictable-idle-time" : "30 mins",
        "Max Total Connections" : "8",
        "dbcp-max-conn-lifetime" : "-1",
        "Validation-query" : null,
        "Database Connection URL" : "jdbc:sqlite:./extensions/russian_surnames.db",
        "dbcp-time-between-eviction-runs" : "-1",
        "Database User" : null,
        "kerberos-user-service" : null,
        "dbcp-soft-min-evictable-idle-time" : "-1",
        "database-driver-locations" : "./extensions/sqlite-jdbc-3.45.1.0.jar",
        "dbcp-max-idle-conns" : "8"
      },
      "propertyDescriptors" : {
        "dbcp-min-idle-conns" : {
          "name" : "dbcp-min-idle-conns",
          "displayName" : "Minimum Idle Connections",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Max Wait Time" : {
          "name" : "Max Wait Time",
          "displayName" : "Max Wait Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Database Driver Class Name" : {
          "name" : "Database Driver Class Name",
          "displayName" : "Database Driver Class Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-min-evictable-idle-time" : {
          "name" : "dbcp-min-evictable-idle-time",
          "displayName" : "Minimum Evictable Idle Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Max Total Connections" : {
          "name" : "Max Total Connections",
          "displayName" : "Max Total Connections",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-max-conn-lifetime" : {
          "name" : "dbcp-max-conn-lifetime",
          "displayName" : "Max Connection Lifetime",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Validation-query" : {
          "name" : "Validation-query",
          "displayName" : "Validation query",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Database Connection URL" : {
          "name" : "Database Connection URL",
          "displayName" : "Database Connection URL",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-time-between-eviction-runs" : {
          "name" : "dbcp-time-between-eviction-runs",
          "displayName" : "Time Between Eviction Runs",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Database User" : {
          "name" : "Database User",
          "displayName" : "Database User",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "kerberos-user-service" : {
          "name" : "kerberos-user-service",
          "displayName" : "Kerberos User Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-soft-min-evictable-idle-time" : {
          "name" : "dbcp-soft-min-evictable-idle-time",
          "displayName" : "Soft Minimum Evictable Idle Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "database-driver-locations" : {
          "name" : "database-driver-locations",
          "displayName" : "Database Driver Location(s)",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false,
          "resourceDefinition" : {
            "cardinality" : "MULTIPLE",
            "resourceTypes" : [ "URL", "DIRECTORY", "FILE" ]
          }
        },
        "dbcp-max-idle-conns" : {
          "name" : "dbcp-max-idle-conns",
          "displayName" : "Max Idle Connections",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Password" : {
          "name" : "Password",
          "displayName" : "Password",
          "identifiesControllerService" : false,
          "sensitive" : true,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.dbcp.DBCPService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "aa247e4b-7fe6-3655-bf2c-e2fef46951ec",
      "instanceIdentifier" : "2c463344-0194-1000-451b-3dab222f67c5",
      "name" : "SimpleDatabaseLookupService",
      "comments" : "",
      "type" : "org.apache.nifi.lookup.db.SimpleDatabaseLookupService",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-lookup-services-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "dbrecord-lookup-dbcp-service" : "72546ad6-c524-3bb0-ae4d-7698eea4f1e8",
        "dbrecord-lookup-clear-cache-on-enabled" : "true",
        "lookup-value-column" : "surname",
        "dbrecord-lookup-cache-size" : "100000",
        "dbrecord-lookup-key-column" : "id",
        "Cache Expiration" : null,
        "dbrecord-lookup-table-name" : "russian_surnames"
      },
      "propertyDescriptors" : {
        "dbrecord-lookup-dbcp-service" : {
          "name" : "dbrecord-lookup-dbcp-service",
          "displayName" : "Database Connection Pooling Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-clear-cache-on-enabled" : {
          "name" : "dbrecord-lookup-clear-cache-on-enabled",
          "displayName" : "Clear Cache on Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "lookup-value-column" : {
          "name" : "lookup-value-column",
          "displayName" : "Lookup Value Column",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-cache-size" : {
          "name" : "dbrecord-lookup-cache-size",
          "displayName" : "Cache Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-key-column" : {
          "name" : "dbrecord-lookup-key-column",
          "displayName" : "Lookup Key Column",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Cache Expiration" : {
          "name" : "Cache Expiration",
          "displayName" : "Cache Expiration",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-table-name" : {
          "name" : "dbrecord-lookup-table-name",
          "displayName" : "Table Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.lookup.LookupService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      }, {
        "type" : "org.apache.nifi.lookup.StringLookupService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "2ea43e8d-fbc3-361c-86ff-7b9c20fe9621",
      "instanceIdentifier" : "45fdd243-0194-1000-a301-c2e8ff17af44",
      "name" : "SimpleRedisDistributedMapCacheClientService",
      "comments" : "",
      "type" : "org.apache.nifi.redis.service.SimpleRedisDistributedMapCacheClientService",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-redis-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "redis-connection-pool" : "8b47b883-509c-3205-bc6f-e71639a60c74",
        "redis-cache-ttl" : "0 secs"
      },
      "propertyDescriptors" : {
        "redis-connection-pool" : {
          "name" : "redis-connection-pool",
          "displayName" : "Redis Connection Pool",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "redis-cache-ttl" : {
          "name" : "redis-cache-ttl",
          "displayName" : "TTL",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.distributed.cache.client.DistributedMapCacheClient",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "76a15e26-07b7-3f1c-9b37-b787cfcedc84",
      "instanceIdentifier" : "2c41ce92-0194-1000-2ad9-2665e2a4d40f",
      "name" : "CSVReader_infer",
      "comments" : "",
      "type" : "org.apache.nifi.csv.CSVReader",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-record-serialization-services-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "schema-reference-reader" : null,
        "ignore-csv-header" : "false",
        "schema-branch" : null,
        "Trim double quote" : "true",
        "CSV Format" : "custom",
        "Quote Character" : "\"",
        "csvutils-allow-duplicate-header-names" : "true",
        "Value Separator" : ",",
        "Record Separator" : "\\n",
        "Timestamp Format" : null,
        "Escape Character" : "\\",
        "Date Format" : null,
        "Null String" : null,
        "Skip Header Line" : "false",
        "Trim Fields" : "true",
        "schema-name" : "${schema.name}",
        "schema-registry" : null,
        "csv-reader-csv-parser" : "commons-csv",
        "Time Format" : null,
        "Comment Marker" : null,
        "schema-access-strategy" : "infer-schema",
        "schema-version" : null,
        "csvutils-character-set" : "UTF-8",
        "schema-text" : "${avro.schema}"
      },
      "propertyDescriptors" : {
        "schema-reference-reader" : {
          "name" : "schema-reference-reader",
          "displayName" : "Schema Reference Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "ignore-csv-header" : {
          "name" : "ignore-csv-header",
          "displayName" : "Ignore CSV Header Column Names",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-branch" : {
          "name" : "schema-branch",
          "displayName" : "Schema Branch",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Trim double quote" : {
          "name" : "Trim double quote",
          "displayName" : "Trim double quote",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "CSV Format" : {
          "name" : "CSV Format",
          "displayName" : "CSV Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Quote Character" : {
          "name" : "Quote Character",
          "displayName" : "Quote Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "csvutils-allow-duplicate-header-names" : {
          "name" : "csvutils-allow-duplicate-header-names",
          "displayName" : "Allow Duplicate Header Names",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Value Separator" : {
          "name" : "Value Separator",
          "displayName" : "Value Separator",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Record Separator" : {
          "name" : "Record Separator",
          "displayName" : "Record Separator",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Timestamp Format" : {
          "name" : "Timestamp Format",
          "displayName" : "Timestamp Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Escape Character" : {
          "name" : "Escape Character",
          "displayName" : "Escape Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Date Format" : {
          "name" : "Date Format",
          "displayName" : "Date Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Null String" : {
          "name" : "Null String",
          "displayName" : "Null String",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Skip Header Line" : {
          "name" : "Skip Header Line",
          "displayName" : "Treat First Line as Header",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Trim Fields" : {
          "name" : "Trim Fields",
          "displayName" : "Trim Fields",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-name" : {
          "name" : "schema-name",
          "displayName" : "Schema Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-registry" : {
          "name" : "schema-registry",
          "displayName" : "Schema Registry",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "csv-reader-csv-parser" : {
          "name" : "csv-reader-csv-parser",
          "displayName" : "CSV Parser",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Time Format" : {
          "name" : "Time Format",
          "displayName" : "Time Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Comment Marker" : {
          "name" : "Comment Marker",
          "displayName" : "Comment Marker",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-access-strategy" : {
          "name" : "schema-access-strategy",
          "displayName" : "Schema Access Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-version" : {
          "name" : "schema-version",
          "displayName" : "Schema Version",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "csvutils-character-set" : {
          "name" : "csvutils-character-set",
          "displayName" : "Character Set",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-text" : {
          "name" : "schema-text",
          "displayName" : "Schema Text",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.serialization.RecordReaderFactory",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "8b47b883-509c-3205-bc6f-e71639a60c74",
      "instanceIdentifier" : "2cfc32cf-0194-1000-ba0f-1813f5f4a168",
      "name" : "RedisConnectionPoolService",
      "comments" : "",
      "type" : "org.apache.nifi.redis.service.RedisConnectionPoolService",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-redis-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "Pool - Min Evictable Idle Time" : "60 seconds",
        "Pool - Test On Borrow" : "false",
        "Pool - Test On Return" : "false",
        "Redis Mode" : "Standalone",
        "Pool - Max Idle" : "8",
        "Pool - Block When Exhausted" : "true",
        "Cluster Max Redirects" : "5",
        "Pool - Num Tests Per Eviction Run" : "-1",
        "Connection String" : "localhost:6379",
        "Pool - Max Total" : "8",
        "Pool - Test On Create" : "false",
        "SSL Context Service" : null,
        "Sentinel Username" : null,
        "Pool - Min Idle" : "0",
        "Username" : null,
        "Pool - Test While Idle" : "true",
        "Pool - Time Between Eviction Runs" : "30 seconds",
        "Communication Timeout" : "10 seconds",
        "Pool - Max Wait Time" : "10 seconds",
        "Database Index" : "3",
        "Sentinel Master" : null
      },
      "propertyDescriptors" : {
        "Pool - Min Evictable Idle Time" : {
          "name" : "Pool - Min Evictable Idle Time",
          "displayName" : "Pool - Min Evictable Idle Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Pool - Test On Borrow" : {
          "name" : "Pool - Test On Borrow",
          "displayName" : "Pool - Test On Borrow",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Pool - Test On Return" : {
          "name" : "Pool - Test On Return",
          "displayName" : "Pool - Test On Return",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Redis Mode" : {
          "name" : "Redis Mode",
          "displayName" : "Redis Mode",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Pool - Max Idle" : {
          "name" : "Pool - Max Idle",
          "displayName" : "Pool - Max Idle",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Pool - Block When Exhausted" : {
          "name" : "Pool - Block When Exhausted",
          "displayName" : "Pool - Block When Exhausted",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Cluster Max Redirects" : {
          "name" : "Cluster Max Redirects",
          "displayName" : "Cluster Max Redirects",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Pool - Num Tests Per Eviction Run" : {
          "name" : "Pool - Num Tests Per Eviction Run",
          "displayName" : "Pool - Num Tests Per Eviction Run",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Connection String" : {
          "name" : "Connection String",
          "displayName" : "Connection String",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Pool - Max Total" : {
          "name" : "Pool - Max Total",
          "displayName" : "Pool - Max Total",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Pool - Test On Create" : {
          "name" : "Pool - Test On Create",
          "displayName" : "Pool - Test On Create",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "SSL Context Service" : {
          "name" : "SSL Context Service",
          "displayName" : "SSL Context Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "Sentinel Username" : {
          "name" : "Sentinel Username",
          "displayName" : "Sentinel Username",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Pool - Min Idle" : {
          "name" : "Pool - Min Idle",
          "displayName" : "Pool - Min Idle",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Username" : {
          "name" : "Username",
          "displayName" : "Username",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Sentinel Password" : {
          "name" : "Sentinel Password",
          "displayName" : "Sentinel Password",
          "identifiesControllerService" : false,
          "sensitive" : true,
          "dynamic" : false
        },
        "Pool - Test While Idle" : {
          "name" : "Pool - Test While Idle",
          "displayName" : "Pool - Test While Idle",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Pool - Time Between Eviction Runs" : {
          "name" : "Pool - Time Between Eviction Runs",
          "displayName" : "Pool - Time Between Eviction Runs",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Communication Timeout" : {
          "name" : "Communication Timeout",
          "displayName" : "Communication Timeout",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Pool - Max Wait Time" : {
          "name" : "Pool - Max Wait Time",
          "displayName" : "Pool - Max Wait Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Database Index" : {
          "name" : "Database Index",
          "displayName" : "Database Index",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Sentinel Master" : {
          "name" : "Sentinel Master",
          "displayName" : "Sentinel Master",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Password" : {
          "name" : "Password",
          "displayName" : "Password",
          "identifiesControllerService" : false,
          "sensitive" : true,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.redis.RedisConnectionPool",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-redis-service-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "cbdc9fbc-8291-38c6-8566-0d947b014841",
      "instanceIdentifier" : "2bff1884-0194-1000-b981-b33c83cd9f8e",
      "name" : "CSVReader_no_header",
      "comments" : "",
      "type" : "org.apache.nifi.csv.CSVReader",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-record-serialization-services-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "schema-reference-reader" : null,
        "ignore-csv-header" : "true",
        "schema-branch" : null,
        "Trim double quote" : "true",
        "CSV Format" : "custom",
        "Quote Character" : "\"",
        "csvutils-allow-duplicate-header-names" : "true",
        "Value Separator" : ",",
        "Record Separator" : "\\n",
        "Timestamp Format" : null,
        "Escape Character" : "\\",
        "Date Format" : null,
        "Null String" : null,
        "Skip Header Line" : "false",
        "Trim Fields" : "true",
        "schema-name" : "${schema.name}",
        "schema-registry" : "03905c43-653c-3202-92ca-d65d4c2d6650",
        "csv-reader-csv-parser" : "commons-csv",
        "Time Format" : null,
        "Comment Marker" : null,
        "schema-access-strategy" : "schema-name",
        "schema-version" : null,
        "csvutils-character-set" : "UTF-8",
        "schema-text" : "${avro.schema}"
      },
      "propertyDescriptors" : {
        "schema-reference-reader" : {
          "name" : "schema-reference-reader",
          "displayName" : "Schema Reference Reader",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "ignore-csv-header" : {
          "name" : "ignore-csv-header",
          "displayName" : "Ignore CSV Header Column Names",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-branch" : {
          "name" : "schema-branch",
          "displayName" : "Schema Branch",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Trim double quote" : {
          "name" : "Trim double quote",
          "displayName" : "Trim double quote",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "CSV Format" : {
          "name" : "CSV Format",
          "displayName" : "CSV Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Quote Character" : {
          "name" : "Quote Character",
          "displayName" : "Quote Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "csvutils-allow-duplicate-header-names" : {
          "name" : "csvutils-allow-duplicate-header-names",
          "displayName" : "Allow Duplicate Header Names",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Value Separator" : {
          "name" : "Value Separator",
          "displayName" : "Value Separator",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Record Separator" : {
          "name" : "Record Separator",
          "displayName" : "Record Separator",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Timestamp Format" : {
          "name" : "Timestamp Format",
          "displayName" : "Timestamp Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Escape Character" : {
          "name" : "Escape Character",
          "displayName" : "Escape Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Date Format" : {
          "name" : "Date Format",
          "displayName" : "Date Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Null String" : {
          "name" : "Null String",
          "displayName" : "Null String",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Skip Header Line" : {
          "name" : "Skip Header Line",
          "displayName" : "Treat First Line as Header",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Trim Fields" : {
          "name" : "Trim Fields",
          "displayName" : "Trim Fields",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-name" : {
          "name" : "schema-name",
          "displayName" : "Schema Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-registry" : {
          "name" : "schema-registry",
          "displayName" : "Schema Registry",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "csv-reader-csv-parser" : {
          "name" : "csv-reader-csv-parser",
          "displayName" : "CSV Parser",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Time Format" : {
          "name" : "Time Format",
          "displayName" : "Time Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Comment Marker" : {
          "name" : "Comment Marker",
          "displayName" : "Comment Marker",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-access-strategy" : {
          "name" : "schema-access-strategy",
          "displayName" : "Schema Access Strategy",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-version" : {
          "name" : "schema-version",
          "displayName" : "Schema Version",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "csvutils-character-set" : {
          "name" : "csvutils-character-set",
          "displayName" : "Character Set",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "schema-text" : {
          "name" : "schema-text",
          "displayName" : "Schema Text",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.serialization.RecordReaderFactory",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "a9645f5b-5bf5-3ced-8c24-73123e68a61b",
      "instanceIdentifier" : "2c375260-0194-1000-3954-45e54ed562a6",
      "name" : "CsvSurnameLookupService",
      "comments" : "",
      "type" : "org.apache.nifi.lookup.SimpleCsvFileLookupService",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-lookup-services-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "Escape Character" : "\\",
        "lookup-key-column" : "id",
        "csv-file" : "./extensions/russian_surnames.csv",
        "Trim Fields" : "true",
        "lookup-value-column" : "surname",
        "CSV Format" : "default",
        "ignore-duplicates" : "true",
        "Quote Character" : "\"",
        "Comment Marker" : null,
        "Value Separator" : ",",
        "Character Set" : "UTF-8",
        "Quote Mode" : "MINIMAL"
      },
      "propertyDescriptors" : {
        "Escape Character" : {
          "name" : "Escape Character",
          "displayName" : "Escape Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "lookup-key-column" : {
          "name" : "lookup-key-column",
          "displayName" : "Lookup Key Column",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "csv-file" : {
          "name" : "csv-file",
          "displayName" : "CSV File",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false,
          "resourceDefinition" : {
            "cardinality" : "SINGLE",
            "resourceTypes" : [ "FILE" ]
          }
        },
        "Trim Fields" : {
          "name" : "Trim Fields",
          "displayName" : "Trim Fields",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "lookup-value-column" : {
          "name" : "lookup-value-column",
          "displayName" : "Lookup Value Column",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "CSV Format" : {
          "name" : "CSV Format",
          "displayName" : "CSV Format",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "ignore-duplicates" : {
          "name" : "ignore-duplicates",
          "displayName" : "Ignore Duplicates",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Quote Character" : {
          "name" : "Quote Character",
          "displayName" : "Quote Character",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Comment Marker" : {
          "name" : "Comment Marker",
          "displayName" : "Comment Marker",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Value Separator" : {
          "name" : "Value Separator",
          "displayName" : "Value Separator",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Character Set" : {
          "name" : "Character Set",
          "displayName" : "Character Set",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Quote Mode" : {
          "name" : "Quote Mode",
          "displayName" : "Quote Mode",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.lookup.LookupService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      }, {
        "type" : "org.apache.nifi.lookup.StringLookupService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "fd1ede1d-f78a-3d21-ac96-aa5f818994ac",
      "instanceIdentifier" : "2cfbc245-0194-1000-c755-660241a18f74",
      "name" : "RedisDistributedMapCacheClientService",
      "comments" : "",
      "type" : "org.apache.nifi.redis.service.RedisDistributedMapCacheClientService",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-redis-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "redis-connection-pool" : "8b47b883-509c-3205-bc6f-e71639a60c74",
        "redis-cache-ttl" : "0 secs"
      },
      "propertyDescriptors" : {
        "redis-connection-pool" : {
          "name" : "redis-connection-pool",
          "displayName" : "Redis Connection Pool",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "redis-cache-ttl" : {
          "name" : "redis-cache-ttl",
          "displayName" : "TTL",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.distributed.cache.client.DistributedMapCacheClient",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      }, {
        "type" : "org.apache.nifi.distributed.cache.client.AtomicDistributedMapCacheClient",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "f7bf8cd6-f667-3955-a8d7-1aa0a0e378f0",
      "instanceIdentifier" : "39314895-0194-1000-bc95-4fc08c45c3dd",
      "name" : "SimpleDatabaseLookupService_pg",
      "comments" : "",
      "type" : "org.apache.nifi.lookup.db.SimpleDatabaseLookupService",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-lookup-services-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "dbrecord-lookup-dbcp-service" : "9ec3ee77-3221-3d62-92f6-8267b10d0e88",
        "dbrecord-lookup-clear-cache-on-enabled" : "true",
        "lookup-value-column" : "surname",
        "dbrecord-lookup-cache-size" : "0",
        "dbrecord-lookup-key-column" : "id",
        "Cache Expiration" : null,
        "dbrecord-lookup-table-name" : "russian_surnames"
      },
      "propertyDescriptors" : {
        "dbrecord-lookup-dbcp-service" : {
          "name" : "dbrecord-lookup-dbcp-service",
          "displayName" : "Database Connection Pooling Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-clear-cache-on-enabled" : {
          "name" : "dbrecord-lookup-clear-cache-on-enabled",
          "displayName" : "Clear Cache on Enabled",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "lookup-value-column" : {
          "name" : "lookup-value-column",
          "displayName" : "Lookup Value Column",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-cache-size" : {
          "name" : "dbrecord-lookup-cache-size",
          "displayName" : "Cache Size",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-key-column" : {
          "name" : "dbrecord-lookup-key-column",
          "displayName" : "Lookup Key Column",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Cache Expiration" : {
          "name" : "Cache Expiration",
          "displayName" : "Cache Expiration",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbrecord-lookup-table-name" : {
          "name" : "dbrecord-lookup-table-name",
          "displayName" : "Table Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.lookup.LookupService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      }, {
        "type" : "org.apache.nifi.lookup.StringLookupService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    }, {
      "identifier" : "7a89b158-bbd8-335b-8513-1dbb82fb7919",
      "instanceIdentifier" : "46b90700-0194-1000-5f23-37107424ac20",
      "name" : "\t DBCPConnectionPool_DuckDB",
      "comments" : "",
      "type" : "org.apache.nifi.dbcp.DBCPConnectionPool",
      "bundle" : {
        "group" : "org.apache.nifi",
        "artifact" : "nifi-dbcp-service-nar",
        "version" : "2.1.0"
      },
      "properties" : {
        "dbcp-min-idle-conns" : "0",
        "Max Wait Time" : "500 millis",
        "Database Driver Class Name" : "org.duckdb.DuckDBDriver",
        "dbcp-min-evictable-idle-time" : "30 mins",
        "Max Total Connections" : "8",
        "dbcp-max-conn-lifetime" : "-1",
        "Validation-query" : null,
        "Database Connection URL" : "jdbc:duckdb:./extensions/russian_surnames.duckdb",
        "dbcp-time-between-eviction-runs" : "-1",
        "Database User" : null,
        "kerberos-user-service" : null,
        "dbcp-soft-min-evictable-idle-time" : "-1",
        "database-driver-locations" : "./extensions/duckdb_jdbc-1.1.3.jar",
        "dbcp-max-idle-conns" : "8"
      },
      "propertyDescriptors" : {
        "dbcp-min-idle-conns" : {
          "name" : "dbcp-min-idle-conns",
          "displayName" : "Minimum Idle Connections",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Max Wait Time" : {
          "name" : "Max Wait Time",
          "displayName" : "Max Wait Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Database Driver Class Name" : {
          "name" : "Database Driver Class Name",
          "displayName" : "Database Driver Class Name",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-min-evictable-idle-time" : {
          "name" : "dbcp-min-evictable-idle-time",
          "displayName" : "Minimum Evictable Idle Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Max Total Connections" : {
          "name" : "Max Total Connections",
          "displayName" : "Max Total Connections",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-max-conn-lifetime" : {
          "name" : "dbcp-max-conn-lifetime",
          "displayName" : "Max Connection Lifetime",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Validation-query" : {
          "name" : "Validation-query",
          "displayName" : "Validation query",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Database Connection URL" : {
          "name" : "Database Connection URL",
          "displayName" : "Database Connection URL",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-time-between-eviction-runs" : {
          "name" : "dbcp-time-between-eviction-runs",
          "displayName" : "Time Between Eviction Runs",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Database User" : {
          "name" : "Database User",
          "displayName" : "Database User",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "kerberos-user-service" : {
          "name" : "kerberos-user-service",
          "displayName" : "Kerberos User Service",
          "identifiesControllerService" : true,
          "sensitive" : false,
          "dynamic" : false
        },
        "dbcp-soft-min-evictable-idle-time" : {
          "name" : "dbcp-soft-min-evictable-idle-time",
          "displayName" : "Soft Minimum Evictable Idle Time",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "database-driver-locations" : {
          "name" : "database-driver-locations",
          "displayName" : "Database Driver Location(s)",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false,
          "resourceDefinition" : {
            "cardinality" : "MULTIPLE",
            "resourceTypes" : [ "URL", "DIRECTORY", "FILE" ]
          }
        },
        "dbcp-max-idle-conns" : {
          "name" : "dbcp-max-idle-conns",
          "displayName" : "Max Idle Connections",
          "identifiesControllerService" : false,
          "sensitive" : false,
          "dynamic" : false
        },
        "Password" : {
          "name" : "Password",
          "displayName" : "Password",
          "identifiesControllerService" : false,
          "sensitive" : true,
          "dynamic" : false
        }
      },
      "controllerServiceApis" : [ {
        "type" : "org.apache.nifi.dbcp.DBCPService",
        "bundle" : {
          "group" : "org.apache.nifi",
          "artifact" : "nifi-standard-services-api-nar",
          "version" : "2.1.0"
        }
      } ],
      "scheduledState" : "DISABLED",
      "bulletinLevel" : "WARN",
      "componentType" : "CONTROLLER_SERVICE",
      "groupIdentifier" : "9c460797-72cc-35df-85b0-e59308273868"
    } ],
    "defaultFlowFileExpiration" : "0 sec",
    "defaultBackPressureObjectThreshold" : 10000,
    "defaultBackPressureDataSizeThreshold" : "1 GB",
    "scheduledState" : "ENABLED",
    "executionEngine" : "INHERITED",
    "maxConcurrentTasks" : 1,
    "statelessFlowTimeout" : "1 min",
    "componentType" : "PROCESS_GROUP",
    "flowFileConcurrency" : "UNBOUNDED",
    "flowFileOutboundPolicy" : "STREAM_WHEN_AVAILABLE"
  },
  "externalControllerServices" : { },
  "parameterContexts" : { },
  "flowEncodingVersion" : "1.0",
  "parameterProviders" : { },
  "latest" : false
} ]